// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/storagetransfer/v1/transfer_types.proto

#include "google/storagetransfer/v1/transfer_types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace google {
namespace storagetransfer {
namespace v1 {
class GoogleServiceAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GoogleServiceAccount>
      _instance;
} _GoogleServiceAccount_default_instance_;
class AwsAccessKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AwsAccessKey>
      _instance;
} _AwsAccessKey_default_instance_;
class ObjectConditionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectConditions>
      _instance;
} _ObjectConditions_default_instance_;
class GcsDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GcsData>
      _instance;
} _GcsData_default_instance_;
class AwsS3DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AwsS3Data>
      _instance;
} _AwsS3Data_default_instance_;
class HttpDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpData>
      _instance;
} _HttpData_default_instance_;
class TransferOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferOptions>
      _instance;
} _TransferOptions_default_instance_;
class TransferSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferSpec>
      _instance;
  const ::google::storagetransfer::v1::GcsData* gcs_data_source_;
  const ::google::storagetransfer::v1::AwsS3Data* aws_s3_data_source_;
  const ::google::storagetransfer::v1::HttpData* http_data_source_;
  const ::google::storagetransfer::v1::GcsData* gcs_data_sink_;
} _TransferSpec_default_instance_;
class ScheduleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Schedule>
      _instance;
} _Schedule_default_instance_;
class TransferJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferJob>
      _instance;
} _TransferJob_default_instance_;
class ErrorLogEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorLogEntry>
      _instance;
} _ErrorLogEntry_default_instance_;
class ErrorSummaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorSummary>
      _instance;
} _ErrorSummary_default_instance_;
class TransferCountersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferCounters>
      _instance;
} _TransferCounters_default_instance_;
class TransferOperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferOperation>
      _instance;
} _TransferOperation_default_instance_;
}  // namespace v1
}  // namespace storagetransfer
}  // namespace google
namespace protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto {
void InitDefaultsGoogleServiceAccountImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::storagetransfer::v1::_GoogleServiceAccount_default_instance_;
    new (ptr) ::google::storagetransfer::v1::GoogleServiceAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::GoogleServiceAccount::InitAsDefaultInstance();
}

void InitDefaultsGoogleServiceAccount() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGoogleServiceAccountImpl);
}

void InitDefaultsAwsAccessKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::storagetransfer::v1::_AwsAccessKey_default_instance_;
    new (ptr) ::google::storagetransfer::v1::AwsAccessKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::AwsAccessKey::InitAsDefaultInstance();
}

void InitDefaultsAwsAccessKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAwsAccessKeyImpl);
}

void InitDefaultsObjectConditionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::google::storagetransfer::v1::_ObjectConditions_default_instance_;
    new (ptr) ::google::storagetransfer::v1::ObjectConditions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::ObjectConditions::InitAsDefaultInstance();
}

void InitDefaultsObjectConditions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectConditionsImpl);
}

void InitDefaultsGcsDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::storagetransfer::v1::_GcsData_default_instance_;
    new (ptr) ::google::storagetransfer::v1::GcsData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::GcsData::InitAsDefaultInstance();
}

void InitDefaultsGcsData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGcsDataImpl);
}

void InitDefaultsAwsS3DataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsAccessKey();
  {
    void* ptr = &::google::storagetransfer::v1::_AwsS3Data_default_instance_;
    new (ptr) ::google::storagetransfer::v1::AwsS3Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::AwsS3Data::InitAsDefaultInstance();
}

void InitDefaultsAwsS3Data() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAwsS3DataImpl);
}

void InitDefaultsHttpDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::storagetransfer::v1::_HttpData_default_instance_;
    new (ptr) ::google::storagetransfer::v1::HttpData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::HttpData::InitAsDefaultInstance();
}

void InitDefaultsHttpData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHttpDataImpl);
}

void InitDefaultsTransferOptionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::storagetransfer::v1::_TransferOptions_default_instance_;
    new (ptr) ::google::storagetransfer::v1::TransferOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::TransferOptions::InitAsDefaultInstance();
}

void InitDefaultsTransferOptions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferOptionsImpl);
}

void InitDefaultsTransferSpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsGcsData();
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsS3Data();
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsHttpData();
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsObjectConditions();
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferOptions();
  {
    void* ptr = &::google::storagetransfer::v1::_TransferSpec_default_instance_;
    new (ptr) ::google::storagetransfer::v1::TransferSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::TransferSpec::InitAsDefaultInstance();
}

void InitDefaultsTransferSpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferSpecImpl);
}

void InitDefaultsScheduleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2ftype_2fdate_2eproto::InitDefaultsDate();
  protobuf_google_2ftype_2ftimeofday_2eproto::InitDefaultsTimeOfDay();
  {
    void* ptr = &::google::storagetransfer::v1::_Schedule_default_instance_;
    new (ptr) ::google::storagetransfer::v1::Schedule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::Schedule::InitAsDefaultInstance();
}

void InitDefaultsSchedule() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsScheduleImpl);
}

void InitDefaultsTransferJobImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferSpec();
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsSchedule();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::google::storagetransfer::v1::_TransferJob_default_instance_;
    new (ptr) ::google::storagetransfer::v1::TransferJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::TransferJob::InitAsDefaultInstance();
}

void InitDefaultsTransferJob() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferJobImpl);
}

void InitDefaultsErrorLogEntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::storagetransfer::v1::_ErrorLogEntry_default_instance_;
    new (ptr) ::google::storagetransfer::v1::ErrorLogEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::ErrorLogEntry::InitAsDefaultInstance();
}

void InitDefaultsErrorLogEntry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErrorLogEntryImpl);
}

void InitDefaultsErrorSummaryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorLogEntry();
  {
    void* ptr = &::google::storagetransfer::v1::_ErrorSummary_default_instance_;
    new (ptr) ::google::storagetransfer::v1::ErrorSummary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::ErrorSummary::InitAsDefaultInstance();
}

void InitDefaultsErrorSummary() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErrorSummaryImpl);
}

void InitDefaultsTransferCountersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::google::storagetransfer::v1::_TransferCounters_default_instance_;
    new (ptr) ::google::storagetransfer::v1::TransferCounters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::TransferCounters::InitAsDefaultInstance();
}

void InitDefaultsTransferCounters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferCountersImpl);
}

void InitDefaultsTransferOperationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferSpec();
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferCounters();
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorSummary();
  {
    void* ptr = &::google::storagetransfer::v1::_TransferOperation_default_instance_;
    new (ptr) ::google::storagetransfer::v1::TransferOperation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::storagetransfer::v1::TransferOperation::InitAsDefaultInstance();
}

void InitDefaultsTransferOperation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferOperationImpl);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::GoogleServiceAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::GoogleServiceAccount, account_email_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::AwsAccessKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::AwsAccessKey, access_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::AwsAccessKey, secret_access_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ObjectConditions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ObjectConditions, min_time_elapsed_since_last_modification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ObjectConditions, max_time_elapsed_since_last_modification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ObjectConditions, include_prefixes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ObjectConditions, exclude_prefixes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::GcsData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::GcsData, bucket_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::AwsS3Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::AwsS3Data, bucket_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::AwsS3Data, aws_access_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::HttpData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::HttpData, list_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOptions, overwrite_objects_already_existing_in_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOptions, delete_objects_unique_in_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOptions, delete_objects_from_source_after_transfer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferSpec, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::storagetransfer::v1::TransferSpecDefaultTypeInternal, gcs_data_source_),
  offsetof(::google::storagetransfer::v1::TransferSpecDefaultTypeInternal, aws_s3_data_source_),
  offsetof(::google::storagetransfer::v1::TransferSpecDefaultTypeInternal, http_data_source_),
  offsetof(::google::storagetransfer::v1::TransferSpecDefaultTypeInternal, gcs_data_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferSpec, object_conditions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferSpec, transfer_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferSpec, data_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferSpec, data_sink_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::Schedule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::Schedule, schedule_start_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::Schedule, schedule_end_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::Schedule, start_time_of_day_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, transfer_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, schedule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, creation_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, last_modification_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferJob, deletion_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ErrorLogEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ErrorLogEntry, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ErrorLogEntry, error_details_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ErrorSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ErrorSummary, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ErrorSummary, error_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::ErrorSummary, error_log_entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, objects_found_from_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, bytes_found_from_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, objects_found_only_from_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, bytes_found_only_from_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, objects_from_source_skipped_by_sync_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, bytes_from_source_skipped_by_sync_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, objects_copied_to_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, bytes_copied_to_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, objects_deleted_from_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, bytes_deleted_from_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, objects_deleted_from_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, bytes_deleted_from_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, objects_from_source_failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, bytes_from_source_failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, objects_failed_to_delete_from_sink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferCounters, bytes_failed_to_delete_from_sink_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, transfer_spec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, counters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, error_breakdowns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::storagetransfer::v1::TransferOperation, transfer_job_name_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::storagetransfer::v1::GoogleServiceAccount)},
  { 6, -1, sizeof(::google::storagetransfer::v1::AwsAccessKey)},
  { 13, -1, sizeof(::google::storagetransfer::v1::ObjectConditions)},
  { 22, -1, sizeof(::google::storagetransfer::v1::GcsData)},
  { 28, -1, sizeof(::google::storagetransfer::v1::AwsS3Data)},
  { 35, -1, sizeof(::google::storagetransfer::v1::HttpData)},
  { 41, -1, sizeof(::google::storagetransfer::v1::TransferOptions)},
  { 49, -1, sizeof(::google::storagetransfer::v1::TransferSpec)},
  { 62, -1, sizeof(::google::storagetransfer::v1::Schedule)},
  { 70, -1, sizeof(::google::storagetransfer::v1::TransferJob)},
  { 84, -1, sizeof(::google::storagetransfer::v1::ErrorLogEntry)},
  { 91, -1, sizeof(::google::storagetransfer::v1::ErrorSummary)},
  { 99, -1, sizeof(::google::storagetransfer::v1::TransferCounters)},
  { 120, -1, sizeof(::google::storagetransfer::v1::TransferOperation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_GoogleServiceAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_AwsAccessKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_ObjectConditions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_GcsData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_AwsS3Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_HttpData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_TransferOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_TransferSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_Schedule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_TransferJob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_ErrorLogEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_ErrorSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_TransferCounters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::storagetransfer::v1::_TransferOperation_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/storagetransfer/v1/transfer_types.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.google/storagetransfer/v1/transfer_typ"
      "es.proto\022\031google.storagetransfer.v1\032\034goo"
      "gle/api/annotations.proto\032\036google/protob"
      "uf/duration.proto\032\037google/protobuf/times"
      "tamp.proto\032\025google/rpc/code.proto\032\026googl"
      "e/type/date.proto\032\033google/type/timeofday"
      ".proto\"-\n\024GoogleServiceAccount\022\025\n\raccoun"
      "t_email\030\001 \001(\t\"@\n\014AwsAccessKey\022\025\n\raccess_"
      "key_id\030\001 \001(\t\022\031\n\021secret_access_key\030\002 \001(\t\""
      "\340\001\n\020ObjectConditions\022K\n(min_time_elapsed"
      "_since_last_modification\030\001 \001(\0132\031.google."
      "protobuf.Duration\022K\n(max_time_elapsed_si"
      "nce_last_modification\030\002 \001(\0132\031.google.pro"
      "tobuf.Duration\022\030\n\020include_prefixes\030\003 \003(\t"
      "\022\030\n\020exclude_prefixes\030\004 \003(\t\"\036\n\007GcsData\022\023\n"
      "\013bucket_name\030\001 \001(\t\"a\n\tAwsS3Data\022\023\n\013bucke"
      "t_name\030\001 \001(\t\022\?\n\016aws_access_key\030\002 \001(\0132\'.g"
      "oogle.storagetransfer.v1.AwsAccessKey\"\034\n"
      "\010HttpData\022\020\n\010list_url\030\001 \001(\t\"\237\001\n\017Transfer"
      "Options\0222\n*overwrite_objects_already_exi"
      "sting_in_sink\030\001 \001(\010\022%\n\035delete_objects_un"
      "ique_in_sink\030\002 \001(\010\0221\n)delete_objects_fro"
      "m_source_after_transfer\030\003 \001(\010\"\271\003\n\014Transf"
      "erSpec\022=\n\017gcs_data_source\030\001 \001(\0132\".google"
      ".storagetransfer.v1.GcsDataH\000\022B\n\022aws_s3_"
      "data_source\030\002 \001(\0132$.google.storagetransf"
      "er.v1.AwsS3DataH\000\022\?\n\020http_data_source\030\003 "
      "\001(\0132#.google.storagetransfer.v1.HttpData"
      "H\000\022;\n\rgcs_data_sink\030\004 \001(\0132\".google.stora"
      "getransfer.v1.GcsDataH\001\022F\n\021object_condit"
      "ions\030\005 \001(\0132+.google.storagetransfer.v1.O"
      "bjectConditions\022D\n\020transfer_options\030\006 \001("
      "\0132*.google.storagetransfer.v1.TransferOp"
      "tionsB\r\n\013data_sourceB\013\n\tdata_sink\"\233\001\n\010Sc"
      "hedule\022.\n\023schedule_start_date\030\001 \001(\0132\021.go"
      "ogle.type.Date\022,\n\021schedule_end_date\030\002 \001("
      "\0132\021.google.type.Date\0221\n\021start_time_of_da"
      "y\030\003 \001(\0132\026.google.type.TimeOfDay\"\346\003\n\013Tran"
      "sferJob\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001"
      "(\t\022\022\n\nproject_id\030\003 \001(\t\022>\n\rtransfer_spec\030"
      "\004 \001(\0132\'.google.storagetransfer.v1.Transf"
      "erSpec\0225\n\010schedule\030\005 \001(\0132#.google.storag"
      "etransfer.v1.Schedule\022=\n\006status\030\006 \001(\0162-."
      "google.storagetransfer.v1.TransferJob.St"
      "atus\0221\n\rcreation_time\030\007 \001(\0132\032.google.pro"
      "tobuf.Timestamp\022:\n\026last_modification_tim"
      "e\030\010 \001(\0132\032.google.protobuf.Timestamp\0221\n\rd"
      "eletion_time\030\t \001(\0132\032.google.protobuf.Tim"
      "estamp\"H\n\006Status\022\026\n\022STATUS_UNSPECIFIED\020\000"
      "\022\013\n\007ENABLED\020\001\022\014\n\010DISABLED\020\002\022\013\n\007DELETED\020\003"
      "\"3\n\rErrorLogEntry\022\013\n\003url\030\001 \001(\t\022\025\n\rerror_"
      "details\030\003 \003(\t\"\216\001\n\014ErrorSummary\022$\n\nerror_"
      "code\030\001 \001(\0162\020.google.rpc.Code\022\023\n\013error_co"
      "unt\030\002 \001(\003\022C\n\021error_log_entries\030\003 \003(\0132(.g"
      "oogle.storagetransfer.v1.ErrorLogEntry\"\336"
      "\004\n\020TransferCounters\022!\n\031objects_found_fro"
      "m_source\030\001 \001(\003\022\037\n\027bytes_found_from_sourc"
      "e\030\002 \001(\003\022$\n\034objects_found_only_from_sink\030"
      "\003 \001(\003\022\"\n\032bytes_found_only_from_sink\030\004 \001("
      "\003\022+\n#objects_from_source_skipped_by_sync"
      "\030\005 \001(\003\022)\n!bytes_from_source_skipped_by_s"
      "ync\030\006 \001(\003\022\036\n\026objects_copied_to_sink\030\007 \001("
      "\003\022\034\n\024bytes_copied_to_sink\030\010 \001(\003\022#\n\033objec"
      "ts_deleted_from_source\030\t \001(\003\022!\n\031bytes_de"
      "leted_from_source\030\n \001(\003\022!\n\031objects_delet"
      "ed_from_sink\030\013 \001(\003\022\037\n\027bytes_deleted_from"
      "_sink\030\014 \001(\003\022\"\n\032objects_from_source_faile"
      "d\030\r \001(\003\022 \n\030bytes_from_source_failed\030\016 \001("
      "\003\022*\n\"objects_failed_to_delete_from_sink\030"
      "\017 \001(\003\022(\n bytes_failed_to_delete_from_sin"
      "k\030\020 \001(\003\"\232\004\n\021TransferOperation\022\014\n\004name\030\001 "
      "\001(\t\022\022\n\nproject_id\030\002 \001(\t\022>\n\rtransfer_spec"
      "\030\003 \001(\0132\'.google.storagetransfer.v1.Trans"
      "ferSpec\022.\n\nstart_time\030\004 \001(\0132\032.google.pro"
      "tobuf.Timestamp\022,\n\010end_time\030\005 \001(\0132\032.goog"
      "le.protobuf.Timestamp\022C\n\006status\030\006 \001(\01623."
      "google.storagetransfer.v1.TransferOperat"
      "ion.Status\022=\n\010counters\030\007 \001(\0132+.google.st"
      "oragetransfer.v1.TransferCounters\022A\n\020err"
      "or_breakdowns\030\010 \003(\0132\'.google.storagetran"
      "sfer.v1.ErrorSummary\022\031\n\021transfer_job_nam"
      "e\030\t \001(\t\"c\n\006Status\022\026\n\022STATUS_UNSPECIFIED\020"
      "\000\022\017\n\013IN_PROGRESS\020\001\022\n\n\006PAUSED\020\002\022\013\n\007SUCCES"
      "S\020\003\022\n\n\006FAILED\020\004\022\013\n\007ABORTED\020\005B\201\001\n#com.goo"
      "gle.storagetransfer.v1.protoB\rTransferTy"
      "pesZHgoogle.golang.org/genproto/googleap"
      "is/storagetransfer/v1;storagetransfer\370\001\001"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3488);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/storagetransfer/v1/transfer_types.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fcode_2eproto::AddDescriptors();
  ::protobuf_google_2ftype_2fdate_2eproto::AddDescriptors();
  ::protobuf_google_2ftype_2ftimeofday_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto
namespace google {
namespace storagetransfer {
namespace v1 {
const ::google::protobuf::EnumDescriptor* TransferJob_Status_descriptor() {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_enum_descriptors[0];
}
bool TransferJob_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TransferJob_Status TransferJob::STATUS_UNSPECIFIED;
const TransferJob_Status TransferJob::ENABLED;
const TransferJob_Status TransferJob::DISABLED;
const TransferJob_Status TransferJob::DELETED;
const TransferJob_Status TransferJob::Status_MIN;
const TransferJob_Status TransferJob::Status_MAX;
const int TransferJob::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TransferOperation_Status_descriptor() {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_enum_descriptors[1];
}
bool TransferOperation_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TransferOperation_Status TransferOperation::STATUS_UNSPECIFIED;
const TransferOperation_Status TransferOperation::IN_PROGRESS;
const TransferOperation_Status TransferOperation::PAUSED;
const TransferOperation_Status TransferOperation::SUCCESS;
const TransferOperation_Status TransferOperation::FAILED;
const TransferOperation_Status TransferOperation::ABORTED;
const TransferOperation_Status TransferOperation::Status_MIN;
const TransferOperation_Status TransferOperation::Status_MAX;
const int TransferOperation::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void GoogleServiceAccount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoogleServiceAccount::kAccountEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoogleServiceAccount::GoogleServiceAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsGoogleServiceAccount();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.GoogleServiceAccount)
}
GoogleServiceAccount::GoogleServiceAccount(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsGoogleServiceAccount();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.GoogleServiceAccount)
}
GoogleServiceAccount::GoogleServiceAccount(const GoogleServiceAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_email().size() > 0) {
    account_email_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_email(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.GoogleServiceAccount)
}

void GoogleServiceAccount::SharedCtor() {
  account_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GoogleServiceAccount::~GoogleServiceAccount() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.GoogleServiceAccount)
  SharedDtor();
}

void GoogleServiceAccount::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  account_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GoogleServiceAccount::ArenaDtor(void* object) {
  GoogleServiceAccount* _this = reinterpret_cast< GoogleServiceAccount* >(object);
  (void)_this;
}
void GoogleServiceAccount::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GoogleServiceAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoogleServiceAccount::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GoogleServiceAccount& GoogleServiceAccount::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsGoogleServiceAccount();
  return *internal_default_instance();
}

GoogleServiceAccount* GoogleServiceAccount::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GoogleServiceAccount>(arena);
}

void GoogleServiceAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.GoogleServiceAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_email_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GoogleServiceAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.GoogleServiceAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string account_email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_email().data(), static_cast<int>(this->account_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.GoogleServiceAccount.account_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.GoogleServiceAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.GoogleServiceAccount)
  return false;
#undef DO_
}

void GoogleServiceAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.GoogleServiceAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_email = 1;
  if (this->account_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_email().data(), static_cast<int>(this->account_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GoogleServiceAccount.account_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_email(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.GoogleServiceAccount)
}

::google::protobuf::uint8* GoogleServiceAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.GoogleServiceAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_email = 1;
  if (this->account_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_email().data(), static_cast<int>(this->account_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GoogleServiceAccount.account_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_email(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.GoogleServiceAccount)
  return target;
}

size_t GoogleServiceAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.GoogleServiceAccount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string account_email = 1;
  if (this->account_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_email());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoogleServiceAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.GoogleServiceAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const GoogleServiceAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoogleServiceAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.GoogleServiceAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.GoogleServiceAccount)
    MergeFrom(*source);
  }
}

void GoogleServiceAccount::MergeFrom(const GoogleServiceAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.GoogleServiceAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_email().size() > 0) {
    set_account_email(from.account_email());
  }
}

void GoogleServiceAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.GoogleServiceAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoogleServiceAccount::CopyFrom(const GoogleServiceAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.GoogleServiceAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoogleServiceAccount::IsInitialized() const {
  return true;
}

void GoogleServiceAccount::Swap(GoogleServiceAccount* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GoogleServiceAccount* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GoogleServiceAccount::UnsafeArenaSwap(GoogleServiceAccount* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GoogleServiceAccount::InternalSwap(GoogleServiceAccount* other) {
  using std::swap;
  account_email_.Swap(&other->account_email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoogleServiceAccount::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AwsAccessKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AwsAccessKey::kAccessKeyIdFieldNumber;
const int AwsAccessKey::kSecretAccessKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AwsAccessKey::AwsAccessKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsAccessKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.AwsAccessKey)
}
AwsAccessKey::AwsAccessKey(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsAccessKey();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.AwsAccessKey)
}
AwsAccessKey::AwsAccessKey(const AwsAccessKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  access_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_key_id().size() > 0) {
    access_key_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_key_id(),
      GetArenaNoVirtual());
  }
  secret_access_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret_access_key().size() > 0) {
    secret_access_key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_access_key(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.AwsAccessKey)
}

void AwsAccessKey::SharedCtor() {
  access_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_access_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AwsAccessKey::~AwsAccessKey() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.AwsAccessKey)
  SharedDtor();
}

void AwsAccessKey::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  access_key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_access_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AwsAccessKey::ArenaDtor(void* object) {
  AwsAccessKey* _this = reinterpret_cast< AwsAccessKey* >(object);
  (void)_this;
}
void AwsAccessKey::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AwsAccessKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AwsAccessKey::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AwsAccessKey& AwsAccessKey::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsAccessKey();
  return *internal_default_instance();
}

AwsAccessKey* AwsAccessKey::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AwsAccessKey>(arena);
}

void AwsAccessKey::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.AwsAccessKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  access_key_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  secret_access_key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool AwsAccessKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.AwsAccessKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string access_key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_key_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_key_id().data(), static_cast<int>(this->access_key_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.AwsAccessKey.access_key_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string secret_access_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secret_access_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->secret_access_key().data(), static_cast<int>(this->secret_access_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.AwsAccessKey.secret_access_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.AwsAccessKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.AwsAccessKey)
  return false;
#undef DO_
}

void AwsAccessKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.AwsAccessKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_key_id = 1;
  if (this->access_key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_key_id().data(), static_cast<int>(this->access_key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsAccessKey.access_key_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->access_key_id(), output);
  }

  // string secret_access_key = 2;
  if (this->secret_access_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_access_key().data(), static_cast<int>(this->secret_access_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsAccessKey.secret_access_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->secret_access_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.AwsAccessKey)
}

::google::protobuf::uint8* AwsAccessKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.AwsAccessKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string access_key_id = 1;
  if (this->access_key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_key_id().data(), static_cast<int>(this->access_key_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsAccessKey.access_key_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->access_key_id(), target);
  }

  // string secret_access_key = 2;
  if (this->secret_access_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->secret_access_key().data(), static_cast<int>(this->secret_access_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsAccessKey.secret_access_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->secret_access_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.AwsAccessKey)
  return target;
}

size_t AwsAccessKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.AwsAccessKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string access_key_id = 1;
  if (this->access_key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_key_id());
  }

  // string secret_access_key = 2;
  if (this->secret_access_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->secret_access_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AwsAccessKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.AwsAccessKey)
  GOOGLE_DCHECK_NE(&from, this);
  const AwsAccessKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AwsAccessKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.AwsAccessKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.AwsAccessKey)
    MergeFrom(*source);
  }
}

void AwsAccessKey::MergeFrom(const AwsAccessKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.AwsAccessKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.access_key_id().size() > 0) {
    set_access_key_id(from.access_key_id());
  }
  if (from.secret_access_key().size() > 0) {
    set_secret_access_key(from.secret_access_key());
  }
}

void AwsAccessKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.AwsAccessKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AwsAccessKey::CopyFrom(const AwsAccessKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.AwsAccessKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AwsAccessKey::IsInitialized() const {
  return true;
}

void AwsAccessKey::Swap(AwsAccessKey* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AwsAccessKey* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AwsAccessKey::UnsafeArenaSwap(AwsAccessKey* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AwsAccessKey::InternalSwap(AwsAccessKey* other) {
  using std::swap;
  access_key_id_.Swap(&other->access_key_id_);
  secret_access_key_.Swap(&other->secret_access_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AwsAccessKey::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectConditions::InitAsDefaultInstance() {
  ::google::storagetransfer::v1::_ObjectConditions_default_instance_._instance.get_mutable()->min_time_elapsed_since_last_modification_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::storagetransfer::v1::_ObjectConditions_default_instance_._instance.get_mutable()->max_time_elapsed_since_last_modification_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void ObjectConditions::_slow_mutable_min_time_elapsed_since_last_modification() {
  min_time_elapsed_since_last_modification_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Duration >(
      GetArenaNoVirtual());
}
void ObjectConditions::unsafe_arena_set_allocated_min_time_elapsed_since_last_modification(
    ::google::protobuf::Duration* min_time_elapsed_since_last_modification) {
  if (GetArenaNoVirtual() == NULL) {
    delete min_time_elapsed_since_last_modification_;
  }
  min_time_elapsed_since_last_modification_ = min_time_elapsed_since_last_modification;
  if (min_time_elapsed_since_last_modification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ObjectConditions.min_time_elapsed_since_last_modification)
}
void ObjectConditions::clear_min_time_elapsed_since_last_modification() {
  if (GetArenaNoVirtual() == NULL && min_time_elapsed_since_last_modification_ != NULL) {
    delete min_time_elapsed_since_last_modification_;
  }
  min_time_elapsed_since_last_modification_ = NULL;
}
void ObjectConditions::_slow_mutable_max_time_elapsed_since_last_modification() {
  max_time_elapsed_since_last_modification_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Duration >(
      GetArenaNoVirtual());
}
void ObjectConditions::unsafe_arena_set_allocated_max_time_elapsed_since_last_modification(
    ::google::protobuf::Duration* max_time_elapsed_since_last_modification) {
  if (GetArenaNoVirtual() == NULL) {
    delete max_time_elapsed_since_last_modification_;
  }
  max_time_elapsed_since_last_modification_ = max_time_elapsed_since_last_modification;
  if (max_time_elapsed_since_last_modification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.ObjectConditions.max_time_elapsed_since_last_modification)
}
void ObjectConditions::clear_max_time_elapsed_since_last_modification() {
  if (GetArenaNoVirtual() == NULL && max_time_elapsed_since_last_modification_ != NULL) {
    delete max_time_elapsed_since_last_modification_;
  }
  max_time_elapsed_since_last_modification_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectConditions::kMinTimeElapsedSinceLastModificationFieldNumber;
const int ObjectConditions::kMaxTimeElapsedSinceLastModificationFieldNumber;
const int ObjectConditions::kIncludePrefixesFieldNumber;
const int ObjectConditions::kExcludePrefixesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectConditions::ObjectConditions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsObjectConditions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.ObjectConditions)
}
ObjectConditions::ObjectConditions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  include_prefixes_(arena),
  exclude_prefixes_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsObjectConditions();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.ObjectConditions)
}
ObjectConditions::ObjectConditions(const ObjectConditions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      include_prefixes_(from.include_prefixes_),
      exclude_prefixes_(from.exclude_prefixes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min_time_elapsed_since_last_modification()) {
    min_time_elapsed_since_last_modification_ = new ::google::protobuf::Duration(*from.min_time_elapsed_since_last_modification_);
  } else {
    min_time_elapsed_since_last_modification_ = NULL;
  }
  if (from.has_max_time_elapsed_since_last_modification()) {
    max_time_elapsed_since_last_modification_ = new ::google::protobuf::Duration(*from.max_time_elapsed_since_last_modification_);
  } else {
    max_time_elapsed_since_last_modification_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.ObjectConditions)
}

void ObjectConditions::SharedCtor() {
  ::memset(&min_time_elapsed_since_last_modification_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_time_elapsed_since_last_modification_) -
      reinterpret_cast<char*>(&min_time_elapsed_since_last_modification_)) + sizeof(max_time_elapsed_since_last_modification_));
  _cached_size_ = 0;
}

ObjectConditions::~ObjectConditions() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.ObjectConditions)
  SharedDtor();
}

void ObjectConditions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete min_time_elapsed_since_last_modification_;
  if (this != internal_default_instance()) delete max_time_elapsed_since_last_modification_;
}

void ObjectConditions::ArenaDtor(void* object) {
  ObjectConditions* _this = reinterpret_cast< ObjectConditions* >(object);
  (void)_this;
}
void ObjectConditions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ObjectConditions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectConditions::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectConditions& ObjectConditions::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsObjectConditions();
  return *internal_default_instance();
}

ObjectConditions* ObjectConditions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ObjectConditions>(arena);
}

void ObjectConditions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.ObjectConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  include_prefixes_.Clear();
  exclude_prefixes_.Clear();
  if (GetArenaNoVirtual() == NULL && min_time_elapsed_since_last_modification_ != NULL) {
    delete min_time_elapsed_since_last_modification_;
  }
  min_time_elapsed_since_last_modification_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_time_elapsed_since_last_modification_ != NULL) {
    delete max_time_elapsed_since_last_modification_;
  }
  max_time_elapsed_since_last_modification_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectConditions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.ObjectConditions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_time_elapsed_since_last_modification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_time_elapsed_since_last_modification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string include_prefixes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_include_prefixes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->include_prefixes(this->include_prefixes_size() - 1).data(),
            static_cast<int>(this->include_prefixes(this->include_prefixes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ObjectConditions.include_prefixes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string exclude_prefixes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_exclude_prefixes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exclude_prefixes(this->exclude_prefixes_size() - 1).data(),
            static_cast<int>(this->exclude_prefixes(this->exclude_prefixes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ObjectConditions.exclude_prefixes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.ObjectConditions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.ObjectConditions)
  return false;
#undef DO_
}

void ObjectConditions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.ObjectConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
  if (this->has_min_time_elapsed_since_last_modification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->min_time_elapsed_since_last_modification_, output);
  }

  // .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
  if (this->has_max_time_elapsed_since_last_modification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->max_time_elapsed_since_last_modification_, output);
  }

  // repeated string include_prefixes = 3;
  for (int i = 0, n = this->include_prefixes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->include_prefixes(i).data(), static_cast<int>(this->include_prefixes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ObjectConditions.include_prefixes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->include_prefixes(i), output);
  }

  // repeated string exclude_prefixes = 4;
  for (int i = 0, n = this->exclude_prefixes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exclude_prefixes(i).data(), static_cast<int>(this->exclude_prefixes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ObjectConditions.exclude_prefixes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->exclude_prefixes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.ObjectConditions)
}

::google::protobuf::uint8* ObjectConditions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.ObjectConditions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
  if (this->has_min_time_elapsed_since_last_modification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->min_time_elapsed_since_last_modification_, deterministic, target);
  }

  // .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
  if (this->has_max_time_elapsed_since_last_modification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->max_time_elapsed_since_last_modification_, deterministic, target);
  }

  // repeated string include_prefixes = 3;
  for (int i = 0, n = this->include_prefixes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->include_prefixes(i).data(), static_cast<int>(this->include_prefixes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ObjectConditions.include_prefixes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->include_prefixes(i), target);
  }

  // repeated string exclude_prefixes = 4;
  for (int i = 0, n = this->exclude_prefixes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exclude_prefixes(i).data(), static_cast<int>(this->exclude_prefixes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ObjectConditions.exclude_prefixes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->exclude_prefixes(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.ObjectConditions)
  return target;
}

size_t ObjectConditions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.ObjectConditions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string include_prefixes = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->include_prefixes_size());
  for (int i = 0, n = this->include_prefixes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->include_prefixes(i));
  }

  // repeated string exclude_prefixes = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->exclude_prefixes_size());
  for (int i = 0, n = this->exclude_prefixes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->exclude_prefixes(i));
  }

  // .google.protobuf.Duration min_time_elapsed_since_last_modification = 1;
  if (this->has_min_time_elapsed_since_last_modification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_time_elapsed_since_last_modification_);
  }

  // .google.protobuf.Duration max_time_elapsed_since_last_modification = 2;
  if (this->has_max_time_elapsed_since_last_modification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_time_elapsed_since_last_modification_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectConditions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.ObjectConditions)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectConditions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectConditions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.ObjectConditions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.ObjectConditions)
    MergeFrom(*source);
  }
}

void ObjectConditions::MergeFrom(const ObjectConditions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.ObjectConditions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  include_prefixes_.MergeFrom(from.include_prefixes_);
  exclude_prefixes_.MergeFrom(from.exclude_prefixes_);
  if (from.has_min_time_elapsed_since_last_modification()) {
    mutable_min_time_elapsed_since_last_modification()->::google::protobuf::Duration::MergeFrom(from.min_time_elapsed_since_last_modification());
  }
  if (from.has_max_time_elapsed_since_last_modification()) {
    mutable_max_time_elapsed_since_last_modification()->::google::protobuf::Duration::MergeFrom(from.max_time_elapsed_since_last_modification());
  }
}

void ObjectConditions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.ObjectConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectConditions::CopyFrom(const ObjectConditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.ObjectConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectConditions::IsInitialized() const {
  return true;
}

void ObjectConditions::Swap(ObjectConditions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ObjectConditions* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ObjectConditions::UnsafeArenaSwap(ObjectConditions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ObjectConditions::InternalSwap(ObjectConditions* other) {
  using std::swap;
  include_prefixes_.InternalSwap(&other->include_prefixes_);
  exclude_prefixes_.InternalSwap(&other->exclude_prefixes_);
  swap(min_time_elapsed_since_last_modification_, other->min_time_elapsed_since_last_modification_);
  swap(max_time_elapsed_since_last_modification_, other->max_time_elapsed_since_last_modification_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectConditions::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GcsData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GcsData::kBucketNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GcsData::GcsData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsGcsData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.GcsData)
}
GcsData::GcsData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsGcsData();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.GcsData)
}
GcsData::GcsData(const GcsData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bucket_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bucket_name().size() > 0) {
    bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.GcsData)
}

void GcsData::SharedCtor() {
  bucket_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GcsData::~GcsData() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.GcsData)
  SharedDtor();
}

void GcsData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  bucket_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GcsData::ArenaDtor(void* object) {
  GcsData* _this = reinterpret_cast< GcsData* >(object);
  (void)_this;
}
void GcsData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void GcsData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GcsData::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GcsData& GcsData::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsGcsData();
  return *internal_default_instance();
}

GcsData* GcsData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<GcsData>(arena);
}

void GcsData::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.GcsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bucket_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool GcsData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.GcsData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bucket_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bucket_name().data(), static_cast<int>(this->bucket_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.GcsData.bucket_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.GcsData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.GcsData)
  return false;
#undef DO_
}

void GcsData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.GcsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_name().data(), static_cast<int>(this->bucket_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GcsData.bucket_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bucket_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.GcsData)
}

::google::protobuf::uint8* GcsData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.GcsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_name().data(), static_cast<int>(this->bucket_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.GcsData.bucket_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.GcsData)
  return target;
}

size_t GcsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.GcsData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bucket_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GcsData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.GcsData)
  GOOGLE_DCHECK_NE(&from, this);
  const GcsData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GcsData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.GcsData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.GcsData)
    MergeFrom(*source);
  }
}

void GcsData::MergeFrom(const GcsData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.GcsData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bucket_name().size() > 0) {
    set_bucket_name(from.bucket_name());
  }
}

void GcsData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.GcsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GcsData::CopyFrom(const GcsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.GcsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GcsData::IsInitialized() const {
  return true;
}

void GcsData::Swap(GcsData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GcsData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void GcsData::UnsafeArenaSwap(GcsData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GcsData::InternalSwap(GcsData* other) {
  using std::swap;
  bucket_name_.Swap(&other->bucket_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GcsData::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AwsS3Data::InitAsDefaultInstance() {
  ::google::storagetransfer::v1::_AwsS3Data_default_instance_._instance.get_mutable()->aws_access_key_ = const_cast< ::google::storagetransfer::v1::AwsAccessKey*>(
      ::google::storagetransfer::v1::AwsAccessKey::internal_default_instance());
}
void AwsS3Data::_slow_mutable_aws_access_key() {
  aws_access_key_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::AwsAccessKey >(
      GetArenaNoVirtual());
}
void AwsS3Data::unsafe_arena_set_allocated_aws_access_key(
    ::google::storagetransfer::v1::AwsAccessKey* aws_access_key) {
  if (GetArenaNoVirtual() == NULL) {
    delete aws_access_key_;
  }
  aws_access_key_ = aws_access_key;
  if (aws_access_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.AwsS3Data.aws_access_key)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AwsS3Data::kBucketNameFieldNumber;
const int AwsS3Data::kAwsAccessKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AwsS3Data::AwsS3Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsS3Data();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.AwsS3Data)
}
AwsS3Data::AwsS3Data(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsS3Data();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.AwsS3Data)
}
AwsS3Data::AwsS3Data(const AwsS3Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bucket_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bucket_name().size() > 0) {
    bucket_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bucket_name(),
      GetArenaNoVirtual());
  }
  if (from.has_aws_access_key()) {
    aws_access_key_ = new ::google::storagetransfer::v1::AwsAccessKey(*from.aws_access_key_);
  } else {
    aws_access_key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.AwsS3Data)
}

void AwsS3Data::SharedCtor() {
  bucket_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aws_access_key_ = NULL;
  _cached_size_ = 0;
}

AwsS3Data::~AwsS3Data() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.AwsS3Data)
  SharedDtor();
}

void AwsS3Data::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  bucket_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete aws_access_key_;
}

void AwsS3Data::ArenaDtor(void* object) {
  AwsS3Data* _this = reinterpret_cast< AwsS3Data* >(object);
  (void)_this;
}
void AwsS3Data::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AwsS3Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AwsS3Data::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AwsS3Data& AwsS3Data::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsAwsS3Data();
  return *internal_default_instance();
}

AwsS3Data* AwsS3Data::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AwsS3Data>(arena);
}

void AwsS3Data::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.AwsS3Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bucket_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && aws_access_key_ != NULL) {
    delete aws_access_key_;
  }
  aws_access_key_ = NULL;
  _internal_metadata_.Clear();
}

bool AwsS3Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.AwsS3Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bucket_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bucket_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bucket_name().data(), static_cast<int>(this->bucket_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.AwsS3Data.bucket_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aws_access_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.AwsS3Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.AwsS3Data)
  return false;
#undef DO_
}

void AwsS3Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.AwsS3Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_name().data(), static_cast<int>(this->bucket_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsS3Data.bucket_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bucket_name(), output);
  }

  // .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
  if (this->has_aws_access_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->aws_access_key_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.AwsS3Data)
}

::google::protobuf::uint8* AwsS3Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.AwsS3Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bucket_name().data(), static_cast<int>(this->bucket_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.AwsS3Data.bucket_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bucket_name(), target);
  }

  // .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
  if (this->has_aws_access_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->aws_access_key_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.AwsS3Data)
  return target;
}

size_t AwsS3Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.AwsS3Data)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string bucket_name = 1;
  if (this->bucket_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bucket_name());
  }

  // .google.storagetransfer.v1.AwsAccessKey aws_access_key = 2;
  if (this->has_aws_access_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->aws_access_key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AwsS3Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.AwsS3Data)
  GOOGLE_DCHECK_NE(&from, this);
  const AwsS3Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AwsS3Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.AwsS3Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.AwsS3Data)
    MergeFrom(*source);
  }
}

void AwsS3Data::MergeFrom(const AwsS3Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.AwsS3Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bucket_name().size() > 0) {
    set_bucket_name(from.bucket_name());
  }
  if (from.has_aws_access_key()) {
    mutable_aws_access_key()->::google::storagetransfer::v1::AwsAccessKey::MergeFrom(from.aws_access_key());
  }
}

void AwsS3Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.AwsS3Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AwsS3Data::CopyFrom(const AwsS3Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.AwsS3Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AwsS3Data::IsInitialized() const {
  return true;
}

void AwsS3Data::Swap(AwsS3Data* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AwsS3Data* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AwsS3Data::UnsafeArenaSwap(AwsS3Data* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AwsS3Data::InternalSwap(AwsS3Data* other) {
  using std::swap;
  bucket_name_.Swap(&other->bucket_name_);
  swap(aws_access_key_, other->aws_access_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AwsS3Data::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HttpData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpData::kListUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpData::HttpData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsHttpData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.HttpData)
}
HttpData::HttpData(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsHttpData();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.HttpData)
}
HttpData::HttpData(const HttpData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.list_url().size() > 0) {
    list_url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_url(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.HttpData)
}

void HttpData::SharedCtor() {
  list_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HttpData::~HttpData() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.HttpData)
  SharedDtor();
}

void HttpData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  list_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HttpData::ArenaDtor(void* object) {
  HttpData* _this = reinterpret_cast< HttpData* >(object);
  (void)_this;
}
void HttpData::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HttpData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpData::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HttpData& HttpData::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsHttpData();
  return *internal_default_instance();
}

HttpData* HttpData::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<HttpData>(arena);
}

void HttpData::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.HttpData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool HttpData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.HttpData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string list_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_list_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->list_url().data(), static_cast<int>(this->list_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.HttpData.list_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.HttpData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.HttpData)
  return false;
#undef DO_
}

void HttpData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.HttpData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string list_url = 1;
  if (this->list_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list_url().data(), static_cast<int>(this->list_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.HttpData.list_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->list_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.HttpData)
}

::google::protobuf::uint8* HttpData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.HttpData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string list_url = 1;
  if (this->list_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list_url().data(), static_cast<int>(this->list_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.HttpData.list_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->list_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.HttpData)
  return target;
}

size_t HttpData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.HttpData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string list_url = 1;
  if (this->list_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->list_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.HttpData)
  GOOGLE_DCHECK_NE(&from, this);
  const HttpData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HttpData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.HttpData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.HttpData)
    MergeFrom(*source);
  }
}

void HttpData::MergeFrom(const HttpData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.HttpData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.list_url().size() > 0) {
    set_list_url(from.list_url());
  }
}

void HttpData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.HttpData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpData::CopyFrom(const HttpData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.HttpData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpData::IsInitialized() const {
  return true;
}

void HttpData::Swap(HttpData* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HttpData* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HttpData::UnsafeArenaSwap(HttpData* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HttpData::InternalSwap(HttpData* other) {
  using std::swap;
  list_url_.Swap(&other->list_url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpData::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferOptions::kOverwriteObjectsAlreadyExistingInSinkFieldNumber;
const int TransferOptions::kDeleteObjectsUniqueInSinkFieldNumber;
const int TransferOptions::kDeleteObjectsFromSourceAfterTransferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferOptions::TransferOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferOptions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferOptions)
}
TransferOptions::TransferOptions(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferOptions();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferOptions)
}
TransferOptions::TransferOptions(const TransferOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&overwrite_objects_already_existing_in_sink_, &from.overwrite_objects_already_existing_in_sink_,
    static_cast<size_t>(reinterpret_cast<char*>(&delete_objects_from_source_after_transfer_) -
    reinterpret_cast<char*>(&overwrite_objects_already_existing_in_sink_)) + sizeof(delete_objects_from_source_after_transfer_));
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferOptions)
}

void TransferOptions::SharedCtor() {
  ::memset(&overwrite_objects_already_existing_in_sink_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delete_objects_from_source_after_transfer_) -
      reinterpret_cast<char*>(&overwrite_objects_already_existing_in_sink_)) + sizeof(delete_objects_from_source_after_transfer_));
  _cached_size_ = 0;
}

TransferOptions::~TransferOptions() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferOptions)
  SharedDtor();
}

void TransferOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TransferOptions::ArenaDtor(void* object) {
  TransferOptions* _this = reinterpret_cast< TransferOptions* >(object);
  (void)_this;
}
void TransferOptions::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferOptions::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferOptions& TransferOptions::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferOptions();
  return *internal_default_instance();
}

TransferOptions* TransferOptions::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferOptions>(arena);
}

void TransferOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&overwrite_objects_already_existing_in_sink_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delete_objects_from_source_after_transfer_) -
      reinterpret_cast<char*>(&overwrite_objects_already_existing_in_sink_)) + sizeof(delete_objects_from_source_after_transfer_));
  _internal_metadata_.Clear();
}

bool TransferOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool overwrite_objects_already_existing_in_sink = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &overwrite_objects_already_existing_in_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool delete_objects_unique_in_sink = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delete_objects_unique_in_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool delete_objects_from_source_after_transfer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delete_objects_from_source_after_transfer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferOptions)
  return false;
#undef DO_
}

void TransferOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool overwrite_objects_already_existing_in_sink = 1;
  if (this->overwrite_objects_already_existing_in_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->overwrite_objects_already_existing_in_sink(), output);
  }

  // bool delete_objects_unique_in_sink = 2;
  if (this->delete_objects_unique_in_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->delete_objects_unique_in_sink(), output);
  }

  // bool delete_objects_from_source_after_transfer = 3;
  if (this->delete_objects_from_source_after_transfer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->delete_objects_from_source_after_transfer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferOptions)
}

::google::protobuf::uint8* TransferOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool overwrite_objects_already_existing_in_sink = 1;
  if (this->overwrite_objects_already_existing_in_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->overwrite_objects_already_existing_in_sink(), target);
  }

  // bool delete_objects_unique_in_sink = 2;
  if (this->delete_objects_unique_in_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->delete_objects_unique_in_sink(), target);
  }

  // bool delete_objects_from_source_after_transfer = 3;
  if (this->delete_objects_from_source_after_transfer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->delete_objects_from_source_after_transfer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferOptions)
  return target;
}

size_t TransferOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool overwrite_objects_already_existing_in_sink = 1;
  if (this->overwrite_objects_already_existing_in_sink() != 0) {
    total_size += 1 + 1;
  }

  // bool delete_objects_unique_in_sink = 2;
  if (this->delete_objects_unique_in_sink() != 0) {
    total_size += 1 + 1;
  }

  // bool delete_objects_from_source_after_transfer = 3;
  if (this->delete_objects_from_source_after_transfer() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferOptions)
    MergeFrom(*source);
  }
}

void TransferOptions::MergeFrom(const TransferOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.overwrite_objects_already_existing_in_sink() != 0) {
    set_overwrite_objects_already_existing_in_sink(from.overwrite_objects_already_existing_in_sink());
  }
  if (from.delete_objects_unique_in_sink() != 0) {
    set_delete_objects_unique_in_sink(from.delete_objects_unique_in_sink());
  }
  if (from.delete_objects_from_source_after_transfer() != 0) {
    set_delete_objects_from_source_after_transfer(from.delete_objects_from_source_after_transfer());
  }
}

void TransferOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferOptions::CopyFrom(const TransferOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferOptions::IsInitialized() const {
  return true;
}

void TransferOptions::Swap(TransferOptions* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferOptions* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TransferOptions::UnsafeArenaSwap(TransferOptions* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferOptions::InternalSwap(TransferOptions* other) {
  using std::swap;
  swap(overwrite_objects_already_existing_in_sink_, other->overwrite_objects_already_existing_in_sink_);
  swap(delete_objects_unique_in_sink_, other->delete_objects_unique_in_sink_);
  swap(delete_objects_from_source_after_transfer_, other->delete_objects_from_source_after_transfer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferOptions::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferSpec::InitAsDefaultInstance() {
  ::google::storagetransfer::v1::_TransferSpec_default_instance_.gcs_data_source_ = const_cast< ::google::storagetransfer::v1::GcsData*>(
      ::google::storagetransfer::v1::GcsData::internal_default_instance());
  ::google::storagetransfer::v1::_TransferSpec_default_instance_.aws_s3_data_source_ = const_cast< ::google::storagetransfer::v1::AwsS3Data*>(
      ::google::storagetransfer::v1::AwsS3Data::internal_default_instance());
  ::google::storagetransfer::v1::_TransferSpec_default_instance_.http_data_source_ = const_cast< ::google::storagetransfer::v1::HttpData*>(
      ::google::storagetransfer::v1::HttpData::internal_default_instance());
  ::google::storagetransfer::v1::_TransferSpec_default_instance_.gcs_data_sink_ = const_cast< ::google::storagetransfer::v1::GcsData*>(
      ::google::storagetransfer::v1::GcsData::internal_default_instance());
  ::google::storagetransfer::v1::_TransferSpec_default_instance_._instance.get_mutable()->object_conditions_ = const_cast< ::google::storagetransfer::v1::ObjectConditions*>(
      ::google::storagetransfer::v1::ObjectConditions::internal_default_instance());
  ::google::storagetransfer::v1::_TransferSpec_default_instance_._instance.get_mutable()->transfer_options_ = const_cast< ::google::storagetransfer::v1::TransferOptions*>(
      ::google::storagetransfer::v1::TransferOptions::internal_default_instance());
}
void TransferSpec::set_allocated_gcs_data_source(::google::storagetransfer::v1::GcsData* gcs_data_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data_source();
  if (gcs_data_source) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(gcs_data_source);
    if (message_arena != submessage_arena) {
      gcs_data_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gcs_data_source, submessage_arena);
    }
    set_has_gcs_data_source();
    data_source_.gcs_data_source_ = gcs_data_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.gcs_data_source)
}
void TransferSpec::set_allocated_aws_s3_data_source(::google::storagetransfer::v1::AwsS3Data* aws_s3_data_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data_source();
  if (aws_s3_data_source) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(aws_s3_data_source);
    if (message_arena != submessage_arena) {
      aws_s3_data_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aws_s3_data_source, submessage_arena);
    }
    set_has_aws_s3_data_source();
    data_source_.aws_s3_data_source_ = aws_s3_data_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.aws_s3_data_source)
}
void TransferSpec::set_allocated_http_data_source(::google::storagetransfer::v1::HttpData* http_data_source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data_source();
  if (http_data_source) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(http_data_source);
    if (message_arena != submessage_arena) {
      http_data_source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, http_data_source, submessage_arena);
    }
    set_has_http_data_source();
    data_source_.http_data_source_ = http_data_source;
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.http_data_source)
}
void TransferSpec::set_allocated_gcs_data_sink(::google::storagetransfer::v1::GcsData* gcs_data_sink) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_data_sink();
  if (gcs_data_sink) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(gcs_data_sink);
    if (message_arena != submessage_arena) {
      gcs_data_sink = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gcs_data_sink, submessage_arena);
    }
    set_has_gcs_data_sink();
    data_sink_.gcs_data_sink_ = gcs_data_sink;
  }
  // @@protoc_insertion_point(field_set_allocated:google.storagetransfer.v1.TransferSpec.gcs_data_sink)
}
void TransferSpec::_slow_mutable_object_conditions() {
  object_conditions_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::ObjectConditions >(
      GetArenaNoVirtual());
}
void TransferSpec::unsafe_arena_set_allocated_object_conditions(
    ::google::storagetransfer::v1::ObjectConditions* object_conditions) {
  if (GetArenaNoVirtual() == NULL) {
    delete object_conditions_;
  }
  object_conditions_ = object_conditions;
  if (object_conditions) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.object_conditions)
}
void TransferSpec::_slow_mutable_transfer_options() {
  transfer_options_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferOptions >(
      GetArenaNoVirtual());
}
void TransferSpec::unsafe_arena_set_allocated_transfer_options(
    ::google::storagetransfer::v1::TransferOptions* transfer_options) {
  if (GetArenaNoVirtual() == NULL) {
    delete transfer_options_;
  }
  transfer_options_ = transfer_options;
  if (transfer_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferSpec.transfer_options)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferSpec::kGcsDataSourceFieldNumber;
const int TransferSpec::kAwsS3DataSourceFieldNumber;
const int TransferSpec::kHttpDataSourceFieldNumber;
const int TransferSpec::kGcsDataSinkFieldNumber;
const int TransferSpec::kObjectConditionsFieldNumber;
const int TransferSpec::kTransferOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferSpec::TransferSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferSpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferSpec)
}
TransferSpec::TransferSpec(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferSpec();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferSpec)
}
TransferSpec::TransferSpec(const TransferSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_object_conditions()) {
    object_conditions_ = new ::google::storagetransfer::v1::ObjectConditions(*from.object_conditions_);
  } else {
    object_conditions_ = NULL;
  }
  if (from.has_transfer_options()) {
    transfer_options_ = new ::google::storagetransfer::v1::TransferOptions(*from.transfer_options_);
  } else {
    transfer_options_ = NULL;
  }
  clear_has_data_source();
  switch (from.data_source_case()) {
    case kGcsDataSource: {
      mutable_gcs_data_source()->::google::storagetransfer::v1::GcsData::MergeFrom(from.gcs_data_source());
      break;
    }
    case kAwsS3DataSource: {
      mutable_aws_s3_data_source()->::google::storagetransfer::v1::AwsS3Data::MergeFrom(from.aws_s3_data_source());
      break;
    }
    case kHttpDataSource: {
      mutable_http_data_source()->::google::storagetransfer::v1::HttpData::MergeFrom(from.http_data_source());
      break;
    }
    case DATA_SOURCE_NOT_SET: {
      break;
    }
  }
  clear_has_data_sink();
  switch (from.data_sink_case()) {
    case kGcsDataSink: {
      mutable_gcs_data_sink()->::google::storagetransfer::v1::GcsData::MergeFrom(from.gcs_data_sink());
      break;
    }
    case DATA_SINK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferSpec)
}

void TransferSpec::SharedCtor() {
  ::memset(&object_conditions_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transfer_options_) -
      reinterpret_cast<char*>(&object_conditions_)) + sizeof(transfer_options_));
  clear_has_data_source();
  clear_has_data_sink();
  _cached_size_ = 0;
}

TransferSpec::~TransferSpec() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferSpec)
  SharedDtor();
}

void TransferSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete object_conditions_;
  if (this != internal_default_instance()) delete transfer_options_;
  if (has_data_source()) {
    clear_data_source();
  }
  if (has_data_sink()) {
    clear_data_sink();
  }
}

void TransferSpec::ArenaDtor(void* object) {
  TransferSpec* _this = reinterpret_cast< TransferSpec* >(object);
  (void)_this;
}
void TransferSpec::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferSpec::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferSpec& TransferSpec::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferSpec();
  return *internal_default_instance();
}

TransferSpec* TransferSpec::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferSpec>(arena);
}

void TransferSpec::clear_data_source() {
// @@protoc_insertion_point(one_of_clear_start:google.storagetransfer.v1.TransferSpec)
  switch (data_source_case()) {
    case kGcsDataSource: {
      if (GetArenaNoVirtual() == NULL) {
        delete data_source_.gcs_data_source_;
      }
      break;
    }
    case kAwsS3DataSource: {
      if (GetArenaNoVirtual() == NULL) {
        delete data_source_.aws_s3_data_source_;
      }
      break;
    }
    case kHttpDataSource: {
      if (GetArenaNoVirtual() == NULL) {
        delete data_source_.http_data_source_;
      }
      break;
    }
    case DATA_SOURCE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_SOURCE_NOT_SET;
}

void TransferSpec::clear_data_sink() {
// @@protoc_insertion_point(one_of_clear_start:google.storagetransfer.v1.TransferSpec)
  switch (data_sink_case()) {
    case kGcsDataSink: {
      if (GetArenaNoVirtual() == NULL) {
        delete data_sink_.gcs_data_sink_;
      }
      break;
    }
    case DATA_SINK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = DATA_SINK_NOT_SET;
}


void TransferSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && object_conditions_ != NULL) {
    delete object_conditions_;
  }
  object_conditions_ = NULL;
  if (GetArenaNoVirtual() == NULL && transfer_options_ != NULL) {
    delete transfer_options_;
  }
  transfer_options_ = NULL;
  clear_data_source();
  clear_data_sink();
  _internal_metadata_.Clear();
}

bool TransferSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.storagetransfer.v1.GcsData gcs_data_source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gcs_data_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aws_s3_data_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.HttpData http_data_source = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http_data_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gcs_data_sink()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.TransferOptions transfer_options = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transfer_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferSpec)
  return false;
#undef DO_
}

void TransferSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.storagetransfer.v1.GcsData gcs_data_source = 1;
  if (has_gcs_data_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *data_source_.gcs_data_source_, output);
  }

  // .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
  if (has_aws_s3_data_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *data_source_.aws_s3_data_source_, output);
  }

  // .google.storagetransfer.v1.HttpData http_data_source = 3;
  if (has_http_data_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *data_source_.http_data_source_, output);
  }

  // .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
  if (has_gcs_data_sink()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *data_sink_.gcs_data_sink_, output);
  }

  // .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
  if (this->has_object_conditions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->object_conditions_, output);
  }

  // .google.storagetransfer.v1.TransferOptions transfer_options = 6;
  if (this->has_transfer_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->transfer_options_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferSpec)
}

::google::protobuf::uint8* TransferSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.storagetransfer.v1.GcsData gcs_data_source = 1;
  if (has_gcs_data_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *data_source_.gcs_data_source_, deterministic, target);
  }

  // .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
  if (has_aws_s3_data_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *data_source_.aws_s3_data_source_, deterministic, target);
  }

  // .google.storagetransfer.v1.HttpData http_data_source = 3;
  if (has_http_data_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *data_source_.http_data_source_, deterministic, target);
  }

  // .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
  if (has_gcs_data_sink()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *data_sink_.gcs_data_sink_, deterministic, target);
  }

  // .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
  if (this->has_object_conditions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->object_conditions_, deterministic, target);
  }

  // .google.storagetransfer.v1.TransferOptions transfer_options = 6;
  if (this->has_transfer_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->transfer_options_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferSpec)
  return target;
}

size_t TransferSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferSpec)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.storagetransfer.v1.ObjectConditions object_conditions = 5;
  if (this->has_object_conditions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->object_conditions_);
  }

  // .google.storagetransfer.v1.TransferOptions transfer_options = 6;
  if (this->has_transfer_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transfer_options_);
  }

  switch (data_source_case()) {
    // .google.storagetransfer.v1.GcsData gcs_data_source = 1;
    case kGcsDataSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_source_.gcs_data_source_);
      break;
    }
    // .google.storagetransfer.v1.AwsS3Data aws_s3_data_source = 2;
    case kAwsS3DataSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_source_.aws_s3_data_source_);
      break;
    }
    // .google.storagetransfer.v1.HttpData http_data_source = 3;
    case kHttpDataSource: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_source_.http_data_source_);
      break;
    }
    case DATA_SOURCE_NOT_SET: {
      break;
    }
  }
  switch (data_sink_case()) {
    // .google.storagetransfer.v1.GcsData gcs_data_sink = 4;
    case kGcsDataSink: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_sink_.gcs_data_sink_);
      break;
    }
    case DATA_SINK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferSpec)
    MergeFrom(*source);
  }
}

void TransferSpec::MergeFrom(const TransferSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object_conditions()) {
    mutable_object_conditions()->::google::storagetransfer::v1::ObjectConditions::MergeFrom(from.object_conditions());
  }
  if (from.has_transfer_options()) {
    mutable_transfer_options()->::google::storagetransfer::v1::TransferOptions::MergeFrom(from.transfer_options());
  }
  switch (from.data_source_case()) {
    case kGcsDataSource: {
      mutable_gcs_data_source()->::google::storagetransfer::v1::GcsData::MergeFrom(from.gcs_data_source());
      break;
    }
    case kAwsS3DataSource: {
      mutable_aws_s3_data_source()->::google::storagetransfer::v1::AwsS3Data::MergeFrom(from.aws_s3_data_source());
      break;
    }
    case kHttpDataSource: {
      mutable_http_data_source()->::google::storagetransfer::v1::HttpData::MergeFrom(from.http_data_source());
      break;
    }
    case DATA_SOURCE_NOT_SET: {
      break;
    }
  }
  switch (from.data_sink_case()) {
    case kGcsDataSink: {
      mutable_gcs_data_sink()->::google::storagetransfer::v1::GcsData::MergeFrom(from.gcs_data_sink());
      break;
    }
    case DATA_SINK_NOT_SET: {
      break;
    }
  }
}

void TransferSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferSpec::CopyFrom(const TransferSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferSpec::IsInitialized() const {
  return true;
}

void TransferSpec::Swap(TransferSpec* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferSpec* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TransferSpec::UnsafeArenaSwap(TransferSpec* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferSpec::InternalSwap(TransferSpec* other) {
  using std::swap;
  swap(object_conditions_, other->object_conditions_);
  swap(transfer_options_, other->transfer_options_);
  swap(data_source_, other->data_source_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(data_sink_, other->data_sink_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferSpec::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Schedule::InitAsDefaultInstance() {
  ::google::storagetransfer::v1::_Schedule_default_instance_._instance.get_mutable()->schedule_start_date_ = const_cast< ::google::type::Date*>(
      ::google::type::Date::internal_default_instance());
  ::google::storagetransfer::v1::_Schedule_default_instance_._instance.get_mutable()->schedule_end_date_ = const_cast< ::google::type::Date*>(
      ::google::type::Date::internal_default_instance());
  ::google::storagetransfer::v1::_Schedule_default_instance_._instance.get_mutable()->start_time_of_day_ = const_cast< ::google::type::TimeOfDay*>(
      ::google::type::TimeOfDay::internal_default_instance());
}
void Schedule::_slow_mutable_schedule_start_date() {
  schedule_start_date_ = ::google::protobuf::Arena::CreateMessage< ::google::type::Date >(
      GetArenaNoVirtual());
}
void Schedule::unsafe_arena_set_allocated_schedule_start_date(
    ::google::type::Date* schedule_start_date) {
  if (GetArenaNoVirtual() == NULL) {
    delete schedule_start_date_;
  }
  schedule_start_date_ = schedule_start_date;
  if (schedule_start_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.Schedule.schedule_start_date)
}
void Schedule::clear_schedule_start_date() {
  if (GetArenaNoVirtual() == NULL && schedule_start_date_ != NULL) {
    delete schedule_start_date_;
  }
  schedule_start_date_ = NULL;
}
void Schedule::_slow_mutable_schedule_end_date() {
  schedule_end_date_ = ::google::protobuf::Arena::CreateMessage< ::google::type::Date >(
      GetArenaNoVirtual());
}
void Schedule::unsafe_arena_set_allocated_schedule_end_date(
    ::google::type::Date* schedule_end_date) {
  if (GetArenaNoVirtual() == NULL) {
    delete schedule_end_date_;
  }
  schedule_end_date_ = schedule_end_date;
  if (schedule_end_date) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.Schedule.schedule_end_date)
}
void Schedule::clear_schedule_end_date() {
  if (GetArenaNoVirtual() == NULL && schedule_end_date_ != NULL) {
    delete schedule_end_date_;
  }
  schedule_end_date_ = NULL;
}
void Schedule::_slow_mutable_start_time_of_day() {
  start_time_of_day_ = ::google::protobuf::Arena::Create< ::google::type::TimeOfDay >(
      GetArenaNoVirtual());
}
void Schedule::unsafe_arena_set_allocated_start_time_of_day(
    ::google::type::TimeOfDay* start_time_of_day) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_time_of_day_;
  }
  start_time_of_day_ = start_time_of_day;
  if (start_time_of_day) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.Schedule.start_time_of_day)
}
void Schedule::clear_start_time_of_day() {
  if (GetArenaNoVirtual() == NULL && start_time_of_day_ != NULL) {
    delete start_time_of_day_;
  }
  start_time_of_day_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Schedule::kScheduleStartDateFieldNumber;
const int Schedule::kScheduleEndDateFieldNumber;
const int Schedule::kStartTimeOfDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Schedule::Schedule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsSchedule();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.Schedule)
}
Schedule::Schedule(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsSchedule();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.Schedule)
}
Schedule::Schedule(const Schedule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_schedule_start_date()) {
    schedule_start_date_ = new ::google::type::Date(*from.schedule_start_date_);
  } else {
    schedule_start_date_ = NULL;
  }
  if (from.has_schedule_end_date()) {
    schedule_end_date_ = new ::google::type::Date(*from.schedule_end_date_);
  } else {
    schedule_end_date_ = NULL;
  }
  if (from.has_start_time_of_day()) {
    start_time_of_day_ = new ::google::type::TimeOfDay(*from.start_time_of_day_);
  } else {
    start_time_of_day_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.Schedule)
}

void Schedule::SharedCtor() {
  ::memset(&schedule_start_date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_of_day_) -
      reinterpret_cast<char*>(&schedule_start_date_)) + sizeof(start_time_of_day_));
  _cached_size_ = 0;
}

Schedule::~Schedule() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.Schedule)
  SharedDtor();
}

void Schedule::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete schedule_start_date_;
  if (this != internal_default_instance()) delete schedule_end_date_;
  if (this != internal_default_instance()) delete start_time_of_day_;
}

void Schedule::ArenaDtor(void* object) {
  Schedule* _this = reinterpret_cast< Schedule* >(object);
  (void)_this;
}
void Schedule::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Schedule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Schedule::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Schedule& Schedule::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsSchedule();
  return *internal_default_instance();
}

Schedule* Schedule::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Schedule>(arena);
}

void Schedule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.Schedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && schedule_start_date_ != NULL) {
    delete schedule_start_date_;
  }
  schedule_start_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && schedule_end_date_ != NULL) {
    delete schedule_end_date_;
  }
  schedule_end_date_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_of_day_ != NULL) {
    delete start_time_of_day_;
  }
  start_time_of_day_ = NULL;
  _internal_metadata_.Clear();
}

bool Schedule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.Schedule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.type.Date schedule_start_date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schedule_start_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.type.Date schedule_end_date = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schedule_end_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.type.TimeOfDay start_time_of_day = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time_of_day()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.Schedule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.Schedule)
  return false;
#undef DO_
}

void Schedule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.Schedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.Date schedule_start_date = 1;
  if (this->has_schedule_start_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->schedule_start_date_, output);
  }

  // .google.type.Date schedule_end_date = 2;
  if (this->has_schedule_end_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->schedule_end_date_, output);
  }

  // .google.type.TimeOfDay start_time_of_day = 3;
  if (this->has_start_time_of_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->start_time_of_day_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.Schedule)
}

::google::protobuf::uint8* Schedule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.Schedule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.type.Date schedule_start_date = 1;
  if (this->has_schedule_start_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->schedule_start_date_, deterministic, target);
  }

  // .google.type.Date schedule_end_date = 2;
  if (this->has_schedule_end_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->schedule_end_date_, deterministic, target);
  }

  // .google.type.TimeOfDay start_time_of_day = 3;
  if (this->has_start_time_of_day()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->start_time_of_day_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.Schedule)
  return target;
}

size_t Schedule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.Schedule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.type.Date schedule_start_date = 1;
  if (this->has_schedule_start_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->schedule_start_date_);
  }

  // .google.type.Date schedule_end_date = 2;
  if (this->has_schedule_end_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->schedule_end_date_);
  }

  // .google.type.TimeOfDay start_time_of_day = 3;
  if (this->has_start_time_of_day()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_time_of_day_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Schedule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.Schedule)
  GOOGLE_DCHECK_NE(&from, this);
  const Schedule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Schedule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.Schedule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.Schedule)
    MergeFrom(*source);
  }
}

void Schedule::MergeFrom(const Schedule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.Schedule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_schedule_start_date()) {
    mutable_schedule_start_date()->::google::type::Date::MergeFrom(from.schedule_start_date());
  }
  if (from.has_schedule_end_date()) {
    mutable_schedule_end_date()->::google::type::Date::MergeFrom(from.schedule_end_date());
  }
  if (from.has_start_time_of_day()) {
    mutable_start_time_of_day()->::google::type::TimeOfDay::MergeFrom(from.start_time_of_day());
  }
}

void Schedule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.Schedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Schedule::CopyFrom(const Schedule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.Schedule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Schedule::IsInitialized() const {
  return true;
}

void Schedule::Swap(Schedule* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Schedule* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Schedule::UnsafeArenaSwap(Schedule* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Schedule::InternalSwap(Schedule* other) {
  using std::swap;
  swap(schedule_start_date_, other->schedule_start_date_);
  swap(schedule_end_date_, other->schedule_end_date_);
  swap(start_time_of_day_, other->start_time_of_day_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Schedule::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferJob::InitAsDefaultInstance() {
  ::google::storagetransfer::v1::_TransferJob_default_instance_._instance.get_mutable()->transfer_spec_ = const_cast< ::google::storagetransfer::v1::TransferSpec*>(
      ::google::storagetransfer::v1::TransferSpec::internal_default_instance());
  ::google::storagetransfer::v1::_TransferJob_default_instance_._instance.get_mutable()->schedule_ = const_cast< ::google::storagetransfer::v1::Schedule*>(
      ::google::storagetransfer::v1::Schedule::internal_default_instance());
  ::google::storagetransfer::v1::_TransferJob_default_instance_._instance.get_mutable()->creation_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::storagetransfer::v1::_TransferJob_default_instance_._instance.get_mutable()->last_modification_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::storagetransfer::v1::_TransferJob_default_instance_._instance.get_mutable()->deletion_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void TransferJob::_slow_mutable_transfer_spec() {
  transfer_spec_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferSpec >(
      GetArenaNoVirtual());
}
void TransferJob::unsafe_arena_set_allocated_transfer_spec(
    ::google::storagetransfer::v1::TransferSpec* transfer_spec) {
  if (GetArenaNoVirtual() == NULL) {
    delete transfer_spec_;
  }
  transfer_spec_ = transfer_spec;
  if (transfer_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.transfer_spec)
}
void TransferJob::_slow_mutable_schedule() {
  schedule_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::Schedule >(
      GetArenaNoVirtual());
}
void TransferJob::unsafe_arena_set_allocated_schedule(
    ::google::storagetransfer::v1::Schedule* schedule) {
  if (GetArenaNoVirtual() == NULL) {
    delete schedule_;
  }
  schedule_ = schedule;
  if (schedule) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.schedule)
}
void TransferJob::_slow_mutable_creation_time() {
  creation_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
void TransferJob::unsafe_arena_set_allocated_creation_time(
    ::google::protobuf::Timestamp* creation_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete creation_time_;
  }
  creation_time_ = creation_time;
  if (creation_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.creation_time)
}
void TransferJob::clear_creation_time() {
  if (GetArenaNoVirtual() == NULL && creation_time_ != NULL) {
    delete creation_time_;
  }
  creation_time_ = NULL;
}
void TransferJob::_slow_mutable_last_modification_time() {
  last_modification_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
void TransferJob::unsafe_arena_set_allocated_last_modification_time(
    ::google::protobuf::Timestamp* last_modification_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete last_modification_time_;
  }
  last_modification_time_ = last_modification_time;
  if (last_modification_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.last_modification_time)
}
void TransferJob::clear_last_modification_time() {
  if (GetArenaNoVirtual() == NULL && last_modification_time_ != NULL) {
    delete last_modification_time_;
  }
  last_modification_time_ = NULL;
}
void TransferJob::_slow_mutable_deletion_time() {
  deletion_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
void TransferJob::unsafe_arena_set_allocated_deletion_time(
    ::google::protobuf::Timestamp* deletion_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete deletion_time_;
  }
  deletion_time_ = deletion_time;
  if (deletion_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferJob.deletion_time)
}
void TransferJob::clear_deletion_time() {
  if (GetArenaNoVirtual() == NULL && deletion_time_ != NULL) {
    delete deletion_time_;
  }
  deletion_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferJob::kNameFieldNumber;
const int TransferJob::kDescriptionFieldNumber;
const int TransferJob::kProjectIdFieldNumber;
const int TransferJob::kTransferSpecFieldNumber;
const int TransferJob::kScheduleFieldNumber;
const int TransferJob::kStatusFieldNumber;
const int TransferJob::kCreationTimeFieldNumber;
const int TransferJob::kLastModificationTimeFieldNumber;
const int TransferJob::kDeletionTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferJob::TransferJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferJob();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferJob)
}
TransferJob::TransferJob(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferJob();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferJob)
}
TransferJob::TransferJob(const TransferJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id(),
      GetArenaNoVirtual());
  }
  if (from.has_transfer_spec()) {
    transfer_spec_ = new ::google::storagetransfer::v1::TransferSpec(*from.transfer_spec_);
  } else {
    transfer_spec_ = NULL;
  }
  if (from.has_schedule()) {
    schedule_ = new ::google::storagetransfer::v1::Schedule(*from.schedule_);
  } else {
    schedule_ = NULL;
  }
  if (from.has_creation_time()) {
    creation_time_ = new ::google::protobuf::Timestamp(*from.creation_time_);
  } else {
    creation_time_ = NULL;
  }
  if (from.has_last_modification_time()) {
    last_modification_time_ = new ::google::protobuf::Timestamp(*from.last_modification_time_);
  } else {
    last_modification_time_ = NULL;
  }
  if (from.has_deletion_time()) {
    deletion_time_ = new ::google::protobuf::Timestamp(*from.deletion_time_);
  } else {
    deletion_time_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferJob)
}

void TransferJob::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transfer_spec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&transfer_spec_)) + sizeof(status_));
  _cached_size_ = 0;
}

TransferJob::~TransferJob() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferJob)
  SharedDtor();
}

void TransferJob::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transfer_spec_;
  if (this != internal_default_instance()) delete schedule_;
  if (this != internal_default_instance()) delete creation_time_;
  if (this != internal_default_instance()) delete last_modification_time_;
  if (this != internal_default_instance()) delete deletion_time_;
}

void TransferJob::ArenaDtor(void* object) {
  TransferJob* _this = reinterpret_cast< TransferJob* >(object);
  (void)_this;
}
void TransferJob::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferJob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferJob::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferJob& TransferJob::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferJob();
  return *internal_default_instance();
}

TransferJob* TransferJob::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferJob>(arena);
}

void TransferJob::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && transfer_spec_ != NULL) {
    delete transfer_spec_;
  }
  transfer_spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && schedule_ != NULL) {
    delete schedule_;
  }
  schedule_ = NULL;
  if (GetArenaNoVirtual() == NULL && creation_time_ != NULL) {
    delete creation_time_;
  }
  creation_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_modification_time_ != NULL) {
    delete last_modification_time_;
  }
  last_modification_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && deletion_time_ != NULL) {
    delete deletion_time_;
  }
  deletion_time_ = NULL;
  status_ = 0;
  _internal_metadata_.Clear();
}

bool TransferJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferJob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferJob.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferJob.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferJob.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transfer_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.Schedule schedule = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schedule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.TransferJob.Status status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::storagetransfer::v1::TransferJob_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp creation_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_creation_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp last_modification_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_modification_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp deletion_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_deletion_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferJob)
  return false;
#undef DO_
}

void TransferJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // string project_id = 3;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->project_id(), output);
  }

  // .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
  if (this->has_transfer_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->transfer_spec_, output);
  }

  // .google.storagetransfer.v1.Schedule schedule = 5;
  if (this->has_schedule()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->schedule_, output);
  }

  // .google.storagetransfer.v1.TransferJob.Status status = 6;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->status(), output);
  }

  // .google.protobuf.Timestamp creation_time = 7;
  if (this->has_creation_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->creation_time_, output);
  }

  // .google.protobuf.Timestamp last_modification_time = 8;
  if (this->has_last_modification_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->last_modification_time_, output);
  }

  // .google.protobuf.Timestamp deletion_time = 9;
  if (this->has_deletion_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->deletion_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferJob)
}

::google::protobuf::uint8* TransferJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // string project_id = 3;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferJob.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->project_id(), target);
  }

  // .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
  if (this->has_transfer_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->transfer_spec_, deterministic, target);
  }

  // .google.storagetransfer.v1.Schedule schedule = 5;
  if (this->has_schedule()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->schedule_, deterministic, target);
  }

  // .google.storagetransfer.v1.TransferJob.Status status = 6;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->status(), target);
  }

  // .google.protobuf.Timestamp creation_time = 7;
  if (this->has_creation_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->creation_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp last_modification_time = 8;
  if (this->has_last_modification_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->last_modification_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp deletion_time = 9;
  if (this->has_deletion_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->deletion_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferJob)
  return target;
}

size_t TransferJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferJob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string project_id = 3;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // .google.storagetransfer.v1.TransferSpec transfer_spec = 4;
  if (this->has_transfer_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transfer_spec_);
  }

  // .google.storagetransfer.v1.Schedule schedule = 5;
  if (this->has_schedule()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->schedule_);
  }

  // .google.protobuf.Timestamp creation_time = 7;
  if (this->has_creation_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->creation_time_);
  }

  // .google.protobuf.Timestamp last_modification_time = 8;
  if (this->has_last_modification_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->last_modification_time_);
  }

  // .google.protobuf.Timestamp deletion_time = 9;
  if (this->has_deletion_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->deletion_time_);
  }

  // .google.storagetransfer.v1.TransferJob.Status status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferJob)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferJob)
    MergeFrom(*source);
  }
}

void TransferJob::MergeFrom(const TransferJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
  if (from.has_transfer_spec()) {
    mutable_transfer_spec()->::google::storagetransfer::v1::TransferSpec::MergeFrom(from.transfer_spec());
  }
  if (from.has_schedule()) {
    mutable_schedule()->::google::storagetransfer::v1::Schedule::MergeFrom(from.schedule());
  }
  if (from.has_creation_time()) {
    mutable_creation_time()->::google::protobuf::Timestamp::MergeFrom(from.creation_time());
  }
  if (from.has_last_modification_time()) {
    mutable_last_modification_time()->::google::protobuf::Timestamp::MergeFrom(from.last_modification_time());
  }
  if (from.has_deletion_time()) {
    mutable_deletion_time()->::google::protobuf::Timestamp::MergeFrom(from.deletion_time());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TransferJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferJob::CopyFrom(const TransferJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferJob::IsInitialized() const {
  return true;
}

void TransferJob::Swap(TransferJob* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferJob* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TransferJob::UnsafeArenaSwap(TransferJob* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferJob::InternalSwap(TransferJob* other) {
  using std::swap;
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  project_id_.Swap(&other->project_id_);
  swap(transfer_spec_, other->transfer_spec_);
  swap(schedule_, other->schedule_);
  swap(creation_time_, other->creation_time_);
  swap(last_modification_time_, other->last_modification_time_);
  swap(deletion_time_, other->deletion_time_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferJob::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorLogEntry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorLogEntry::kUrlFieldNumber;
const int ErrorLogEntry::kErrorDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorLogEntry::ErrorLogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorLogEntry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.ErrorLogEntry)
}
ErrorLogEntry::ErrorLogEntry(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  error_details_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorLogEntry();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.ErrorLogEntry)
}
ErrorLogEntry::ErrorLogEntry(const ErrorLogEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      error_details_(from.error_details_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.ErrorLogEntry)
}

void ErrorLogEntry::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ErrorLogEntry::~ErrorLogEntry() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.ErrorLogEntry)
  SharedDtor();
}

void ErrorLogEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorLogEntry::ArenaDtor(void* object) {
  ErrorLogEntry* _this = reinterpret_cast< ErrorLogEntry* >(object);
  (void)_this;
}
void ErrorLogEntry::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ErrorLogEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorLogEntry::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorLogEntry& ErrorLogEntry::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorLogEntry();
  return *internal_default_instance();
}

ErrorLogEntry* ErrorLogEntry::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ErrorLogEntry>(arena);
}

void ErrorLogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.ErrorLogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_details_.Clear();
  url_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ErrorLogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.ErrorLogEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ErrorLogEntry.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string error_details = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_error_details()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_details(this->error_details_size() - 1).data(),
            static_cast<int>(this->error_details(this->error_details_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.ErrorLogEntry.error_details"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.ErrorLogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.ErrorLogEntry)
  return false;
#undef DO_
}

void ErrorLogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.ErrorLogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ErrorLogEntry.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // repeated string error_details = 3;
  for (int i = 0, n = this->error_details_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_details(i).data(), static_cast<int>(this->error_details(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ErrorLogEntry.error_details");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->error_details(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.ErrorLogEntry)
}

::google::protobuf::uint8* ErrorLogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.ErrorLogEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ErrorLogEntry.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // repeated string error_details = 3;
  for (int i = 0, n = this->error_details_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_details(i).data(), static_cast<int>(this->error_details(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.ErrorLogEntry.error_details");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->error_details(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.ErrorLogEntry)
  return target;
}

size_t ErrorLogEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.ErrorLogEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string error_details = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->error_details_size());
  for (int i = 0, n = this->error_details_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->error_details(i));
  }

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorLogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.ErrorLogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorLogEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorLogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.ErrorLogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.ErrorLogEntry)
    MergeFrom(*source);
  }
}

void ErrorLogEntry::MergeFrom(const ErrorLogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.ErrorLogEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  error_details_.MergeFrom(from.error_details_);
  if (from.url().size() > 0) {
    set_url(from.url());
  }
}

void ErrorLogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.ErrorLogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorLogEntry::CopyFrom(const ErrorLogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.ErrorLogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorLogEntry::IsInitialized() const {
  return true;
}

void ErrorLogEntry::Swap(ErrorLogEntry* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ErrorLogEntry* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ErrorLogEntry::UnsafeArenaSwap(ErrorLogEntry* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ErrorLogEntry::InternalSwap(ErrorLogEntry* other) {
  using std::swap;
  error_details_.InternalSwap(&other->error_details_);
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorLogEntry::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorSummary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorSummary::kErrorCodeFieldNumber;
const int ErrorSummary::kErrorCountFieldNumber;
const int ErrorSummary::kErrorLogEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorSummary::ErrorSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorSummary();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.ErrorSummary)
}
ErrorSummary::ErrorSummary(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  error_log_entries_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorSummary();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.ErrorSummary)
}
ErrorSummary::ErrorSummary(const ErrorSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      error_log_entries_(from.error_log_entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_count_, &from.error_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&error_count_)) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.ErrorSummary)
}

void ErrorSummary::SharedCtor() {
  ::memset(&error_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&error_count_)) + sizeof(error_code_));
  _cached_size_ = 0;
}

ErrorSummary::~ErrorSummary() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.ErrorSummary)
  SharedDtor();
}

void ErrorSummary::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ErrorSummary::ArenaDtor(void* object) {
  ErrorSummary* _this = reinterpret_cast< ErrorSummary* >(object);
  (void)_this;
}
void ErrorSummary::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ErrorSummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorSummary::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorSummary& ErrorSummary::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsErrorSummary();
  return *internal_default_instance();
}

ErrorSummary* ErrorSummary::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<ErrorSummary>(arena);
}

void ErrorSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.ErrorSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_log_entries_.Clear();
  ::memset(&error_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&error_count_)) + sizeof(error_code_));
  _internal_metadata_.Clear();
}

bool ErrorSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.ErrorSummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.rpc.Code error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::google::rpc::Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 error_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &error_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_error_log_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.ErrorSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.ErrorSummary)
  return false;
#undef DO_
}

void ErrorSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.ErrorSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Code error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // int64 error_count = 2;
  if (this->error_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->error_count(), output);
  }

  // repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_log_entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->error_log_entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.ErrorSummary)
}

::google::protobuf::uint8* ErrorSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.ErrorSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Code error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // int64 error_count = 2;
  if (this->error_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->error_count(), target);
  }

  // repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_log_entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->error_log_entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.ErrorSummary)
  return target;
}

size_t ErrorSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.ErrorSummary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.storagetransfer.v1.ErrorLogEntry error_log_entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->error_log_entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error_log_entries(static_cast<int>(i)));
    }
  }

  // int64 error_count = 2;
  if (this->error_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->error_count());
  }

  // .google.rpc.Code error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.ErrorSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.ErrorSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.ErrorSummary)
    MergeFrom(*source);
  }
}

void ErrorSummary::MergeFrom(const ErrorSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.ErrorSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  error_log_entries_.MergeFrom(from.error_log_entries_);
  if (from.error_count() != 0) {
    set_error_count(from.error_count());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void ErrorSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.ErrorSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorSummary::CopyFrom(const ErrorSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.ErrorSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorSummary::IsInitialized() const {
  return true;
}

void ErrorSummary::Swap(ErrorSummary* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ErrorSummary* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ErrorSummary::UnsafeArenaSwap(ErrorSummary* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ErrorSummary::InternalSwap(ErrorSummary* other) {
  using std::swap;
  error_log_entries_.InternalSwap(&other->error_log_entries_);
  swap(error_count_, other->error_count_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorSummary::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferCounters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferCounters::kObjectsFoundFromSourceFieldNumber;
const int TransferCounters::kBytesFoundFromSourceFieldNumber;
const int TransferCounters::kObjectsFoundOnlyFromSinkFieldNumber;
const int TransferCounters::kBytesFoundOnlyFromSinkFieldNumber;
const int TransferCounters::kObjectsFromSourceSkippedBySyncFieldNumber;
const int TransferCounters::kBytesFromSourceSkippedBySyncFieldNumber;
const int TransferCounters::kObjectsCopiedToSinkFieldNumber;
const int TransferCounters::kBytesCopiedToSinkFieldNumber;
const int TransferCounters::kObjectsDeletedFromSourceFieldNumber;
const int TransferCounters::kBytesDeletedFromSourceFieldNumber;
const int TransferCounters::kObjectsDeletedFromSinkFieldNumber;
const int TransferCounters::kBytesDeletedFromSinkFieldNumber;
const int TransferCounters::kObjectsFromSourceFailedFieldNumber;
const int TransferCounters::kBytesFromSourceFailedFieldNumber;
const int TransferCounters::kObjectsFailedToDeleteFromSinkFieldNumber;
const int TransferCounters::kBytesFailedToDeleteFromSinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferCounters::TransferCounters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferCounters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferCounters)
}
TransferCounters::TransferCounters(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferCounters();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferCounters)
}
TransferCounters::TransferCounters(const TransferCounters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&objects_found_from_source_, &from.objects_found_from_source_,
    static_cast<size_t>(reinterpret_cast<char*>(&bytes_failed_to_delete_from_sink_) -
    reinterpret_cast<char*>(&objects_found_from_source_)) + sizeof(bytes_failed_to_delete_from_sink_));
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferCounters)
}

void TransferCounters::SharedCtor() {
  ::memset(&objects_found_from_source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bytes_failed_to_delete_from_sink_) -
      reinterpret_cast<char*>(&objects_found_from_source_)) + sizeof(bytes_failed_to_delete_from_sink_));
  _cached_size_ = 0;
}

TransferCounters::~TransferCounters() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferCounters)
  SharedDtor();
}

void TransferCounters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void TransferCounters::ArenaDtor(void* object) {
  TransferCounters* _this = reinterpret_cast< TransferCounters* >(object);
  (void)_this;
}
void TransferCounters::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferCounters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferCounters::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferCounters& TransferCounters::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferCounters();
  return *internal_default_instance();
}

TransferCounters* TransferCounters::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferCounters>(arena);
}

void TransferCounters::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferCounters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&objects_found_from_source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bytes_failed_to_delete_from_sink_) -
      reinterpret_cast<char*>(&objects_found_from_source_)) + sizeof(bytes_failed_to_delete_from_sink_));
  _internal_metadata_.Clear();
}

bool TransferCounters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferCounters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 objects_found_from_source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_found_from_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_found_from_source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_found_from_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 objects_found_only_from_sink = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_found_only_from_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_found_only_from_sink = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_found_only_from_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 objects_from_source_skipped_by_sync = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_from_source_skipped_by_sync_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_from_source_skipped_by_sync = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_from_source_skipped_by_sync_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 objects_copied_to_sink = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_copied_to_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_copied_to_sink = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_copied_to_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 objects_deleted_from_source = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_deleted_from_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_deleted_from_source = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_deleted_from_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 objects_deleted_from_sink = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_deleted_from_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_deleted_from_sink = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_deleted_from_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 objects_from_source_failed = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_from_source_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_from_source_failed = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_from_source_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 objects_failed_to_delete_from_sink = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objects_failed_to_delete_from_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 bytes_failed_to_delete_from_sink = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &bytes_failed_to_delete_from_sink_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferCounters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferCounters)
  return false;
#undef DO_
}

void TransferCounters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferCounters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 objects_found_from_source = 1;
  if (this->objects_found_from_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->objects_found_from_source(), output);
  }

  // int64 bytes_found_from_source = 2;
  if (this->bytes_found_from_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->bytes_found_from_source(), output);
  }

  // int64 objects_found_only_from_sink = 3;
  if (this->objects_found_only_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->objects_found_only_from_sink(), output);
  }

  // int64 bytes_found_only_from_sink = 4;
  if (this->bytes_found_only_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->bytes_found_only_from_sink(), output);
  }

  // int64 objects_from_source_skipped_by_sync = 5;
  if (this->objects_from_source_skipped_by_sync() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->objects_from_source_skipped_by_sync(), output);
  }

  // int64 bytes_from_source_skipped_by_sync = 6;
  if (this->bytes_from_source_skipped_by_sync() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->bytes_from_source_skipped_by_sync(), output);
  }

  // int64 objects_copied_to_sink = 7;
  if (this->objects_copied_to_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->objects_copied_to_sink(), output);
  }

  // int64 bytes_copied_to_sink = 8;
  if (this->bytes_copied_to_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->bytes_copied_to_sink(), output);
  }

  // int64 objects_deleted_from_source = 9;
  if (this->objects_deleted_from_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->objects_deleted_from_source(), output);
  }

  // int64 bytes_deleted_from_source = 10;
  if (this->bytes_deleted_from_source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->bytes_deleted_from_source(), output);
  }

  // int64 objects_deleted_from_sink = 11;
  if (this->objects_deleted_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->objects_deleted_from_sink(), output);
  }

  // int64 bytes_deleted_from_sink = 12;
  if (this->bytes_deleted_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->bytes_deleted_from_sink(), output);
  }

  // int64 objects_from_source_failed = 13;
  if (this->objects_from_source_failed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->objects_from_source_failed(), output);
  }

  // int64 bytes_from_source_failed = 14;
  if (this->bytes_from_source_failed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->bytes_from_source_failed(), output);
  }

  // int64 objects_failed_to_delete_from_sink = 15;
  if (this->objects_failed_to_delete_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->objects_failed_to_delete_from_sink(), output);
  }

  // int64 bytes_failed_to_delete_from_sink = 16;
  if (this->bytes_failed_to_delete_from_sink() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(16, this->bytes_failed_to_delete_from_sink(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferCounters)
}

::google::protobuf::uint8* TransferCounters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferCounters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 objects_found_from_source = 1;
  if (this->objects_found_from_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->objects_found_from_source(), target);
  }

  // int64 bytes_found_from_source = 2;
  if (this->bytes_found_from_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->bytes_found_from_source(), target);
  }

  // int64 objects_found_only_from_sink = 3;
  if (this->objects_found_only_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->objects_found_only_from_sink(), target);
  }

  // int64 bytes_found_only_from_sink = 4;
  if (this->bytes_found_only_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->bytes_found_only_from_sink(), target);
  }

  // int64 objects_from_source_skipped_by_sync = 5;
  if (this->objects_from_source_skipped_by_sync() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->objects_from_source_skipped_by_sync(), target);
  }

  // int64 bytes_from_source_skipped_by_sync = 6;
  if (this->bytes_from_source_skipped_by_sync() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->bytes_from_source_skipped_by_sync(), target);
  }

  // int64 objects_copied_to_sink = 7;
  if (this->objects_copied_to_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->objects_copied_to_sink(), target);
  }

  // int64 bytes_copied_to_sink = 8;
  if (this->bytes_copied_to_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->bytes_copied_to_sink(), target);
  }

  // int64 objects_deleted_from_source = 9;
  if (this->objects_deleted_from_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->objects_deleted_from_source(), target);
  }

  // int64 bytes_deleted_from_source = 10;
  if (this->bytes_deleted_from_source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->bytes_deleted_from_source(), target);
  }

  // int64 objects_deleted_from_sink = 11;
  if (this->objects_deleted_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->objects_deleted_from_sink(), target);
  }

  // int64 bytes_deleted_from_sink = 12;
  if (this->bytes_deleted_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->bytes_deleted_from_sink(), target);
  }

  // int64 objects_from_source_failed = 13;
  if (this->objects_from_source_failed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->objects_from_source_failed(), target);
  }

  // int64 bytes_from_source_failed = 14;
  if (this->bytes_from_source_failed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->bytes_from_source_failed(), target);
  }

  // int64 objects_failed_to_delete_from_sink = 15;
  if (this->objects_failed_to_delete_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->objects_failed_to_delete_from_sink(), target);
  }

  // int64 bytes_failed_to_delete_from_sink = 16;
  if (this->bytes_failed_to_delete_from_sink() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(16, this->bytes_failed_to_delete_from_sink(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferCounters)
  return target;
}

size_t TransferCounters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferCounters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 objects_found_from_source = 1;
  if (this->objects_found_from_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_found_from_source());
  }

  // int64 bytes_found_from_source = 2;
  if (this->bytes_found_from_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_found_from_source());
  }

  // int64 objects_found_only_from_sink = 3;
  if (this->objects_found_only_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_found_only_from_sink());
  }

  // int64 bytes_found_only_from_sink = 4;
  if (this->bytes_found_only_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_found_only_from_sink());
  }

  // int64 objects_from_source_skipped_by_sync = 5;
  if (this->objects_from_source_skipped_by_sync() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_from_source_skipped_by_sync());
  }

  // int64 bytes_from_source_skipped_by_sync = 6;
  if (this->bytes_from_source_skipped_by_sync() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_from_source_skipped_by_sync());
  }

  // int64 objects_copied_to_sink = 7;
  if (this->objects_copied_to_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_copied_to_sink());
  }

  // int64 bytes_copied_to_sink = 8;
  if (this->bytes_copied_to_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_copied_to_sink());
  }

  // int64 objects_deleted_from_source = 9;
  if (this->objects_deleted_from_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_deleted_from_source());
  }

  // int64 bytes_deleted_from_source = 10;
  if (this->bytes_deleted_from_source() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_deleted_from_source());
  }

  // int64 objects_deleted_from_sink = 11;
  if (this->objects_deleted_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_deleted_from_sink());
  }

  // int64 bytes_deleted_from_sink = 12;
  if (this->bytes_deleted_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_deleted_from_sink());
  }

  // int64 objects_from_source_failed = 13;
  if (this->objects_from_source_failed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_from_source_failed());
  }

  // int64 bytes_from_source_failed = 14;
  if (this->bytes_from_source_failed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_from_source_failed());
  }

  // int64 objects_failed_to_delete_from_sink = 15;
  if (this->objects_failed_to_delete_from_sink() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->objects_failed_to_delete_from_sink());
  }

  // int64 bytes_failed_to_delete_from_sink = 16;
  if (this->bytes_failed_to_delete_from_sink() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->bytes_failed_to_delete_from_sink());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferCounters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferCounters)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferCounters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferCounters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferCounters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferCounters)
    MergeFrom(*source);
  }
}

void TransferCounters::MergeFrom(const TransferCounters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferCounters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.objects_found_from_source() != 0) {
    set_objects_found_from_source(from.objects_found_from_source());
  }
  if (from.bytes_found_from_source() != 0) {
    set_bytes_found_from_source(from.bytes_found_from_source());
  }
  if (from.objects_found_only_from_sink() != 0) {
    set_objects_found_only_from_sink(from.objects_found_only_from_sink());
  }
  if (from.bytes_found_only_from_sink() != 0) {
    set_bytes_found_only_from_sink(from.bytes_found_only_from_sink());
  }
  if (from.objects_from_source_skipped_by_sync() != 0) {
    set_objects_from_source_skipped_by_sync(from.objects_from_source_skipped_by_sync());
  }
  if (from.bytes_from_source_skipped_by_sync() != 0) {
    set_bytes_from_source_skipped_by_sync(from.bytes_from_source_skipped_by_sync());
  }
  if (from.objects_copied_to_sink() != 0) {
    set_objects_copied_to_sink(from.objects_copied_to_sink());
  }
  if (from.bytes_copied_to_sink() != 0) {
    set_bytes_copied_to_sink(from.bytes_copied_to_sink());
  }
  if (from.objects_deleted_from_source() != 0) {
    set_objects_deleted_from_source(from.objects_deleted_from_source());
  }
  if (from.bytes_deleted_from_source() != 0) {
    set_bytes_deleted_from_source(from.bytes_deleted_from_source());
  }
  if (from.objects_deleted_from_sink() != 0) {
    set_objects_deleted_from_sink(from.objects_deleted_from_sink());
  }
  if (from.bytes_deleted_from_sink() != 0) {
    set_bytes_deleted_from_sink(from.bytes_deleted_from_sink());
  }
  if (from.objects_from_source_failed() != 0) {
    set_objects_from_source_failed(from.objects_from_source_failed());
  }
  if (from.bytes_from_source_failed() != 0) {
    set_bytes_from_source_failed(from.bytes_from_source_failed());
  }
  if (from.objects_failed_to_delete_from_sink() != 0) {
    set_objects_failed_to_delete_from_sink(from.objects_failed_to_delete_from_sink());
  }
  if (from.bytes_failed_to_delete_from_sink() != 0) {
    set_bytes_failed_to_delete_from_sink(from.bytes_failed_to_delete_from_sink());
  }
}

void TransferCounters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferCounters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferCounters::CopyFrom(const TransferCounters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferCounters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferCounters::IsInitialized() const {
  return true;
}

void TransferCounters::Swap(TransferCounters* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferCounters* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TransferCounters::UnsafeArenaSwap(TransferCounters* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferCounters::InternalSwap(TransferCounters* other) {
  using std::swap;
  swap(objects_found_from_source_, other->objects_found_from_source_);
  swap(bytes_found_from_source_, other->bytes_found_from_source_);
  swap(objects_found_only_from_sink_, other->objects_found_only_from_sink_);
  swap(bytes_found_only_from_sink_, other->bytes_found_only_from_sink_);
  swap(objects_from_source_skipped_by_sync_, other->objects_from_source_skipped_by_sync_);
  swap(bytes_from_source_skipped_by_sync_, other->bytes_from_source_skipped_by_sync_);
  swap(objects_copied_to_sink_, other->objects_copied_to_sink_);
  swap(bytes_copied_to_sink_, other->bytes_copied_to_sink_);
  swap(objects_deleted_from_source_, other->objects_deleted_from_source_);
  swap(bytes_deleted_from_source_, other->bytes_deleted_from_source_);
  swap(objects_deleted_from_sink_, other->objects_deleted_from_sink_);
  swap(bytes_deleted_from_sink_, other->bytes_deleted_from_sink_);
  swap(objects_from_source_failed_, other->objects_from_source_failed_);
  swap(bytes_from_source_failed_, other->bytes_from_source_failed_);
  swap(objects_failed_to_delete_from_sink_, other->objects_failed_to_delete_from_sink_);
  swap(bytes_failed_to_delete_from_sink_, other->bytes_failed_to_delete_from_sink_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferCounters::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferOperation::InitAsDefaultInstance() {
  ::google::storagetransfer::v1::_TransferOperation_default_instance_._instance.get_mutable()->transfer_spec_ = const_cast< ::google::storagetransfer::v1::TransferSpec*>(
      ::google::storagetransfer::v1::TransferSpec::internal_default_instance());
  ::google::storagetransfer::v1::_TransferOperation_default_instance_._instance.get_mutable()->start_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::storagetransfer::v1::_TransferOperation_default_instance_._instance.get_mutable()->end_time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::google::storagetransfer::v1::_TransferOperation_default_instance_._instance.get_mutable()->counters_ = const_cast< ::google::storagetransfer::v1::TransferCounters*>(
      ::google::storagetransfer::v1::TransferCounters::internal_default_instance());
}
void TransferOperation::_slow_mutable_transfer_spec() {
  transfer_spec_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferSpec >(
      GetArenaNoVirtual());
}
void TransferOperation::unsafe_arena_set_allocated_transfer_spec(
    ::google::storagetransfer::v1::TransferSpec* transfer_spec) {
  if (GetArenaNoVirtual() == NULL) {
    delete transfer_spec_;
  }
  transfer_spec_ = transfer_spec;
  if (transfer_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.transfer_spec)
}
void TransferOperation::_slow_mutable_start_time() {
  start_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
void TransferOperation::unsafe_arena_set_allocated_start_time(
    ::google::protobuf::Timestamp* start_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete start_time_;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.start_time)
}
void TransferOperation::clear_start_time() {
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
}
void TransferOperation::_slow_mutable_end_time() {
  end_time_ = ::google::protobuf::Arena::CreateMessage< ::google::protobuf::Timestamp >(
      GetArenaNoVirtual());
}
void TransferOperation::unsafe_arena_set_allocated_end_time(
    ::google::protobuf::Timestamp* end_time) {
  if (GetArenaNoVirtual() == NULL) {
    delete end_time_;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.end_time)
}
void TransferOperation::clear_end_time() {
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
}
void TransferOperation::_slow_mutable_counters() {
  counters_ = ::google::protobuf::Arena::CreateMessage< ::google::storagetransfer::v1::TransferCounters >(
      GetArenaNoVirtual());
}
void TransferOperation::unsafe_arena_set_allocated_counters(
    ::google::storagetransfer::v1::TransferCounters* counters) {
  if (GetArenaNoVirtual() == NULL) {
    delete counters_;
  }
  counters_ = counters;
  if (counters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.storagetransfer.v1.TransferOperation.counters)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferOperation::kNameFieldNumber;
const int TransferOperation::kProjectIdFieldNumber;
const int TransferOperation::kTransferSpecFieldNumber;
const int TransferOperation::kStartTimeFieldNumber;
const int TransferOperation::kEndTimeFieldNumber;
const int TransferOperation::kStatusFieldNumber;
const int TransferOperation::kCountersFieldNumber;
const int TransferOperation::kErrorBreakdownsFieldNumber;
const int TransferOperation::kTransferJobNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferOperation::TransferOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferOperation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.storagetransfer.v1.TransferOperation)
}
TransferOperation::TransferOperation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  error_breakdowns_(arena) {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferOperation();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.storagetransfer.v1.TransferOperation)
}
TransferOperation::TransferOperation(const TransferOperation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      error_breakdowns_(from.error_breakdowns_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.project_id().size() > 0) {
    project_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_id(),
      GetArenaNoVirtual());
  }
  transfer_job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transfer_job_name().size() > 0) {
    transfer_job_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transfer_job_name(),
      GetArenaNoVirtual());
  }
  if (from.has_transfer_spec()) {
    transfer_spec_ = new ::google::storagetransfer::v1::TransferSpec(*from.transfer_spec_);
  } else {
    transfer_spec_ = NULL;
  }
  if (from.has_start_time()) {
    start_time_ = new ::google::protobuf::Timestamp(*from.start_time_);
  } else {
    start_time_ = NULL;
  }
  if (from.has_end_time()) {
    end_time_ = new ::google::protobuf::Timestamp(*from.end_time_);
  } else {
    end_time_ = NULL;
  }
  if (from.has_counters()) {
    counters_ = new ::google::storagetransfer::v1::TransferCounters(*from.counters_);
  } else {
    counters_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:google.storagetransfer.v1.TransferOperation)
}

void TransferOperation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transfer_spec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&transfer_spec_)) + sizeof(status_));
  _cached_size_ = 0;
}

TransferOperation::~TransferOperation() {
  // @@protoc_insertion_point(destructor:google.storagetransfer.v1.TransferOperation)
  SharedDtor();
}

void TransferOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_job_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transfer_spec_;
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
  if (this != internal_default_instance()) delete counters_;
}

void TransferOperation::ArenaDtor(void* object) {
  TransferOperation* _this = reinterpret_cast< TransferOperation* >(object);
  (void)_this;
}
void TransferOperation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void TransferOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferOperation::descriptor() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferOperation& TransferOperation::default_instance() {
  ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::InitDefaultsTransferOperation();
  return *internal_default_instance();
}

TransferOperation* TransferOperation::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<TransferOperation>(arena);
}

void TransferOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.storagetransfer.v1.TransferOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_breakdowns_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  project_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  transfer_job_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && transfer_spec_ != NULL) {
    delete transfer_spec_;
  }
  transfer_spec_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_time_ != NULL) {
    delete start_time_;
  }
  start_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_time_ != NULL) {
    delete end_time_;
  }
  end_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
  status_ = 0;
  _internal_metadata_.Clear();
}

bool TransferOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.storagetransfer.v1.TransferOperation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferOperation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string project_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_id().data(), static_cast<int>(this->project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferOperation.project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transfer_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp end_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.TransferOperation.Status status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::google::storagetransfer::v1::TransferOperation_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.storagetransfer.v1.TransferCounters counters = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_counters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_error_breakdowns()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transfer_job_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transfer_job_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transfer_job_name().data(), static_cast<int>(this->transfer_job_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.storagetransfer.v1.TransferOperation.transfer_job_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.storagetransfer.v1.TransferOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.storagetransfer.v1.TransferOperation)
  return false;
#undef DO_
}

void TransferOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.storagetransfer.v1.TransferOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project_id(), output);
  }

  // .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
  if (this->has_transfer_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->transfer_spec_, output);
  }

  // .google.protobuf.Timestamp start_time = 4;
  if (this->has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->start_time_, output);
  }

  // .google.protobuf.Timestamp end_time = 5;
  if (this->has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->end_time_, output);
  }

  // .google.storagetransfer.v1.TransferOperation.Status status = 6;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->status(), output);
  }

  // .google.storagetransfer.v1.TransferCounters counters = 7;
  if (this->has_counters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->counters_, output);
  }

  // repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_breakdowns_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->error_breakdowns(static_cast<int>(i)), output);
  }

  // string transfer_job_name = 9;
  if (this->transfer_job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer_job_name().data(), static_cast<int>(this->transfer_job_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.transfer_job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->transfer_job_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.storagetransfer.v1.TransferOperation)
}

::google::protobuf::uint8* TransferOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.storagetransfer.v1.TransferOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string project_id = 2;
  if (this->project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_id().data(), static_cast<int>(this->project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_id(), target);
  }

  // .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
  if (this->has_transfer_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->transfer_spec_, deterministic, target);
  }

  // .google.protobuf.Timestamp start_time = 4;
  if (this->has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->start_time_, deterministic, target);
  }

  // .google.protobuf.Timestamp end_time = 5;
  if (this->has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->end_time_, deterministic, target);
  }

  // .google.storagetransfer.v1.TransferOperation.Status status = 6;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->status(), target);
  }

  // .google.storagetransfer.v1.TransferCounters counters = 7;
  if (this->has_counters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->counters_, deterministic, target);
  }

  // repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->error_breakdowns_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->error_breakdowns(static_cast<int>(i)), deterministic, target);
  }

  // string transfer_job_name = 9;
  if (this->transfer_job_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transfer_job_name().data(), static_cast<int>(this->transfer_job_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.storagetransfer.v1.TransferOperation.transfer_job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->transfer_job_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.storagetransfer.v1.TransferOperation)
  return target;
}

size_t TransferOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.storagetransfer.v1.TransferOperation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.storagetransfer.v1.ErrorSummary error_breakdowns = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->error_breakdowns_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->error_breakdowns(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string project_id = 2;
  if (this->project_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_id());
  }

  // string transfer_job_name = 9;
  if (this->transfer_job_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transfer_job_name());
  }

  // .google.storagetransfer.v1.TransferSpec transfer_spec = 3;
  if (this->has_transfer_spec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transfer_spec_);
  }

  // .google.protobuf.Timestamp start_time = 4;
  if (this->has_start_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_time_);
  }

  // .google.protobuf.Timestamp end_time = 5;
  if (this->has_end_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->end_time_);
  }

  // .google.storagetransfer.v1.TransferCounters counters = 7;
  if (this->has_counters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->counters_);
  }

  // .google.storagetransfer.v1.TransferOperation.Status status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.storagetransfer.v1.TransferOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.storagetransfer.v1.TransferOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.storagetransfer.v1.TransferOperation)
    MergeFrom(*source);
  }
}

void TransferOperation::MergeFrom(const TransferOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.storagetransfer.v1.TransferOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  error_breakdowns_.MergeFrom(from.error_breakdowns_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.project_id().size() > 0) {
    set_project_id(from.project_id());
  }
  if (from.transfer_job_name().size() > 0) {
    set_transfer_job_name(from.transfer_job_name());
  }
  if (from.has_transfer_spec()) {
    mutable_transfer_spec()->::google::storagetransfer::v1::TransferSpec::MergeFrom(from.transfer_spec());
  }
  if (from.has_start_time()) {
    mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(from.start_time());
  }
  if (from.has_end_time()) {
    mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(from.end_time());
  }
  if (from.has_counters()) {
    mutable_counters()->::google::storagetransfer::v1::TransferCounters::MergeFrom(from.counters());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TransferOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.storagetransfer.v1.TransferOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferOperation::CopyFrom(const TransferOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.storagetransfer.v1.TransferOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferOperation::IsInitialized() const {
  return true;
}

void TransferOperation::Swap(TransferOperation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    TransferOperation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void TransferOperation::UnsafeArenaSwap(TransferOperation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void TransferOperation::InternalSwap(TransferOperation* other) {
  using std::swap;
  error_breakdowns_.InternalSwap(&other->error_breakdowns_);
  name_.Swap(&other->name_);
  project_id_.Swap(&other->project_id_);
  transfer_job_name_.Swap(&other->transfer_job_name_);
  swap(transfer_spec_, other->transfer_spec_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(counters_, other->counters_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferOperation::GetMetadata() const {
  protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fstoragetransfer_2fv1_2ftransfer_5ftypes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace storagetransfer
}  // namespace google

// @@protoc_insertion_point(global_scope)
